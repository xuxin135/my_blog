{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reactive, defineComponent, inject, h, provide, ref, getCurrentInstance, watch, nextTick, resolveComponent, withDirectives, openBlock, createBlock, withModifiers, createVNode, createCommentVNode, withCtx, Fragment, renderList, vShow, onMounted, onBeforeUnmount, onUpdated, computed, toDisplayString } from 'vue';\nimport ElCollapseTransition from '../el-collapse-transition';\nimport ElCheckbox from '../el-checkbox';\nimport mitt from 'mitt';\nimport { removeClass, addClass, on, off } from '../utils/dom';\nimport { EVENT_CODE } from '../utils/aria';\nimport { useLocaleInject } from '../hooks';\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\n\nconst EMPTY_OBJ = process.env.NODE_ENV !== 'production' ? Object.freeze({}) : {};\nconst EMPTY_ARR = process.env.NODE_ENV !== 'production' ? Object.freeze([]) : [];\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\n\nconst NODE_KEY = \"$treeNodeId\";\n\nconst markNodeData = function (node, data) {\n  if (!data || data[NODE_KEY]) return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\n\nconst getNodeKey = function (key, data) {\n  if (!key) return data[NODE_KEY];\n  return data[key];\n};\n\nconst getChildState = node => {\n  let all = true;\n  let none = true;\n  let allWithoutDisable = true;\n\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i];\n\n    if (n.checked !== true || n.indeterminate) {\n      all = false;\n\n      if (!n.disabled) {\n        allWithoutDisable = false;\n      }\n    }\n\n    if (n.checked !== false || n.indeterminate) {\n      none = false;\n    }\n  }\n\n  return {\n    all,\n    none,\n    allWithoutDisable,\n    half: !all && !none\n  };\n};\n\nconst reInitChecked = function (node) {\n  if (node.childNodes.length === 0) return;\n  const {\n    all,\n    none,\n    half\n  } = getChildState(node.childNodes);\n\n  if (all) {\n    node.checked = true;\n    node.indeterminate = false;\n  } else if (half) {\n    node.checked = false;\n    node.indeterminate = true;\n  } else if (none) {\n    node.checked = false;\n    node.indeterminate = false;\n  }\n\n  const parent = node.parent;\n  if (!parent || parent.level === 0) return;\n\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent);\n  }\n};\n\nconst getPropertyFromData = function (node, prop) {\n  const props = node.store.props;\n  const data = node.data || {};\n  const config = props[prop];\n\n  if (typeof config === \"function\") {\n    return config(data, node);\n  } else if (typeof config === \"string\") {\n    return data[config];\n  } else if (typeof config === \"undefined\") {\n    const dataProp = data[prop];\n    return dataProp === void 0 ? \"\" : dataProp;\n  }\n};\n\nlet nodeIdSeed = 0;\n\nclass Node {\n  constructor(options) {\n    this.id = nodeIdSeed++;\n    this.text = null;\n    this.checked = false;\n    this.indeterminate = false;\n    this.data = null;\n    this.expanded = false;\n    this.parent = null;\n    this.visible = true;\n    this.isCurrent = false;\n    this.canFocus = false;\n\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name];\n      }\n    }\n\n    this.level = 0;\n    this.loaded = false;\n    this.childNodes = [];\n    this.loading = false;\n\n    if (this.parent) {\n      this.level = this.parent.level + 1;\n    }\n  }\n\n  initialize() {\n    const store = this.store;\n\n    if (!store) {\n      throw new Error(\"[Node]store is required!\");\n    }\n\n    store.registerNode(this);\n    const props = store.props;\n\n    if (props && typeof props.isLeaf !== \"undefined\") {\n      const isLeaf = getPropertyFromData(this, \"isLeaf\");\n\n      if (typeof isLeaf === \"boolean\") {\n        this.isLeafByUser = isLeaf;\n      }\n    }\n\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data);\n\n      if (store.defaultExpandAll) {\n        this.expanded = true;\n        this.canFocus = true;\n      }\n    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n      this.expand();\n    }\n\n    if (!Array.isArray(this.data)) {\n      markNodeData(this, this.data);\n    }\n\n    if (!this.data) return;\n    const defaultExpandedKeys = store.defaultExpandedKeys;\n    const key = store.key;\n\n    if (key && defaultExpandedKeys && defaultExpandedKeys.indexOf(this.key) !== -1) {\n      this.expand(null, store.autoExpandParent);\n    }\n\n    if (key && store.currentNodeKey !== void 0 && this.key === store.currentNodeKey) {\n      store.currentNode = this;\n      store.currentNode.isCurrent = true;\n    }\n\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this);\n    }\n\n    this.updateLeafState();\n    if (this.parent && (this.level === 1 || this.parent.expanded === true)) this.canFocus = true;\n  }\n\n  setData(data) {\n    if (!Array.isArray(data)) {\n      markNodeData(this, data);\n    }\n\n    this.data = data;\n    this.childNodes = [];\n    let children;\n\n    if (this.level === 0 && this.data instanceof Array) {\n      children = this.data;\n    } else {\n      children = getPropertyFromData(this, \"children\") || [];\n    }\n\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({\n        data: children[i]\n      });\n    }\n  }\n\n  get label() {\n    return getPropertyFromData(this, \"label\");\n  }\n\n  get key() {\n    const nodeKey = this.store.key;\n    if (this.data) return this.data[nodeKey];\n    return null;\n  }\n\n  get disabled() {\n    return getPropertyFromData(this, \"disabled\");\n  }\n\n  get nextSibling() {\n    const parent = this.parent;\n\n    if (parent) {\n      const index = parent.childNodes.indexOf(this);\n\n      if (index > -1) {\n        return parent.childNodes[index + 1];\n      }\n    }\n\n    return null;\n  }\n\n  get previousSibling() {\n    const parent = this.parent;\n\n    if (parent) {\n      const index = parent.childNodes.indexOf(this);\n\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null;\n      }\n    }\n\n    return null;\n  }\n\n  contains(target, deep = true) {\n    return (this.childNodes || []).some(child => child === target || deep && child.contains(target));\n  }\n\n  remove() {\n    const parent = this.parent;\n\n    if (parent) {\n      parent.removeChild(this);\n    }\n  }\n\n  insertChild(child, index, batch) {\n    if (!child) throw new Error(\"insertChild error: child is required.\");\n\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true);\n\n        if (children.indexOf(child.data) === -1) {\n          if (typeof index === \"undefined\" || index < 0) {\n            children.push(child.data);\n          } else {\n            children.splice(index, 0, child.data);\n          }\n        }\n      }\n\n      Object.assign(child, {\n        parent: this,\n        store: this.store\n      });\n      child = reactive(new Node(child));\n\n      if (child instanceof Node) {\n        child.initialize();\n      }\n    }\n\n    child.level = this.level + 1;\n\n    if (typeof index === \"undefined\" || index < 0) {\n      this.childNodes.push(child);\n    } else {\n      this.childNodes.splice(index, 0, child);\n    }\n\n    this.updateLeafState();\n  }\n\n  insertBefore(child, ref) {\n    let index;\n\n    if (ref) {\n      index = this.childNodes.indexOf(ref);\n    }\n\n    this.insertChild(child, index);\n  }\n\n  insertAfter(child, ref) {\n    let index;\n\n    if (ref) {\n      index = this.childNodes.indexOf(ref);\n      if (index !== -1) index += 1;\n    }\n\n    this.insertChild(child, index);\n  }\n\n  removeChild(child) {\n    const children = this.getChildren() || [];\n    const dataIndex = children.indexOf(child.data);\n\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1);\n    }\n\n    const index = this.childNodes.indexOf(child);\n\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child);\n      child.parent = null;\n      this.childNodes.splice(index, 1);\n    }\n\n    this.updateLeafState();\n  }\n\n  removeChildByData(data) {\n    let targetNode = null;\n\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i];\n        break;\n      }\n    }\n\n    if (targetNode) {\n      this.removeChild(targetNode);\n    }\n  }\n\n  expand(callback, expandParent) {\n    const done = () => {\n      if (expandParent) {\n        let parent = this.parent;\n\n        while (parent.level > 0) {\n          parent.expanded = true;\n          parent = parent.parent;\n        }\n      }\n\n      this.expanded = true;\n      if (callback) callback();\n      this.childNodes.forEach(item => {\n        item.canFocus = true;\n      });\n    };\n\n    if (this.shouldLoadData()) {\n      this.loadData(data => {\n        if (Array.isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true);\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this);\n          }\n\n          done();\n        }\n      });\n    } else {\n      done();\n    }\n  }\n\n  doCreateChildren(array, defaultProps = {}) {\n    array.forEach(item => {\n      this.insertChild(Object.assign({\n        data: item\n      }, defaultProps), void 0, true);\n    });\n  }\n\n  collapse() {\n    this.expanded = false;\n    this.childNodes.forEach(item => {\n      item.canFocus = false;\n    });\n  }\n\n  shouldLoadData() {\n    return this.store.lazy === true && this.store.load && !this.loaded;\n  }\n\n  updateLeafState() {\n    if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== \"undefined\") {\n      this.isLeaf = this.isLeafByUser;\n      return;\n    }\n\n    const childNodes = this.childNodes;\n\n    if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {\n      this.isLeaf = !childNodes || childNodes.length === 0;\n      return;\n    }\n\n    this.isLeaf = false;\n  }\n\n  setChecked(value, deep, recursion, passValue) {\n    this.indeterminate = value === \"half\";\n    this.checked = value === true;\n    if (this.store.checkStrictly) return;\n\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const {\n        all,\n        allWithoutDisable\n      } = getChildState(this.childNodes);\n\n      if (!this.isLeaf && !all && allWithoutDisable) {\n        this.checked = false;\n        value = false;\n      }\n\n      const handleDescendants = () => {\n        if (deep) {\n          const childNodes = this.childNodes;\n\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i];\n            passValue = passValue || value !== false;\n            const isCheck = child.disabled ? child.checked : passValue;\n            child.setChecked(isCheck, deep, true, passValue);\n          }\n\n          const {\n            half,\n            all: all2\n          } = getChildState(childNodes);\n\n          if (!all2) {\n            this.checked = all2;\n            this.indeterminate = half;\n          }\n        }\n      };\n\n      if (this.shouldLoadData()) {\n        this.loadData(() => {\n          handleDescendants();\n          reInitChecked(this);\n        }, {\n          checked: value !== false\n        });\n        return;\n      } else {\n        handleDescendants();\n      }\n    }\n\n    const parent = this.parent;\n    if (!parent || parent.level === 0) return;\n\n    if (!recursion) {\n      reInitChecked(parent);\n    }\n  }\n\n  getChildren(forceInit = false) {\n    if (this.level === 0) return this.data;\n    const data = this.data;\n    if (!data) return null;\n    const props = this.store.props;\n    let children = \"children\";\n\n    if (props) {\n      children = props.children || \"children\";\n    }\n\n    if (data[children] === void 0) {\n      data[children] = null;\n    }\n\n    if (forceInit && !data[children]) {\n      data[children] = [];\n    }\n\n    return data[children];\n  }\n\n  updateChildren() {\n    const newData = this.getChildren() || [];\n    const oldData = this.childNodes.map(node => node.data);\n    const newDataMap = {};\n    const newNodes = [];\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY];\n      const isNodeExists = !!key && oldData.findIndex(data => data[NODE_KEY] === key) >= 0;\n\n      if (isNodeExists) {\n        newDataMap[key] = {\n          index,\n          data: item\n        };\n      } else {\n        newNodes.push({\n          index,\n          data: item\n        });\n      }\n    });\n\n    if (!this.store.lazy) {\n      oldData.forEach(item => {\n        if (!newDataMap[item[NODE_KEY]]) this.removeChildByData(item);\n      });\n    }\n\n    newNodes.forEach(({\n      index,\n      data\n    }) => {\n      this.insertChild({\n        data\n      }, index);\n    });\n    this.updateLeafState();\n  }\n\n  loadData(callback, defaultProps = {}) {\n    if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps).length)) {\n      this.loading = true;\n\n      const resolve = children => {\n        this.loaded = true;\n        this.loading = false;\n        this.childNodes = [];\n        this.doCreateChildren(children, defaultProps);\n        this.updateLeafState();\n\n        if (callback) {\n          callback.call(this, children);\n        }\n      };\n\n      this.store.load(this, resolve);\n    } else {\n      if (callback) {\n        callback.call(this);\n      }\n    }\n  }\n\n}\n\nclass TreeStore {\n  constructor(options) {\n    this.currentNode = null;\n    this.currentNodeKey = null;\n\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option];\n      }\n    }\n\n    this.nodesMap = {};\n  }\n\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this\n    });\n    this.root.initialize();\n\n    if (this.lazy && this.load) {\n      const loadFn = this.load;\n      loadFn(this.root, data => {\n        this.root.doCreateChildren(data);\n\n        this._initDefaultCheckedNodes();\n      });\n    } else {\n      this._initDefaultCheckedNodes();\n    }\n  }\n\n  filter(value) {\n    const filterNodeMethod = this.filterNodeMethod;\n    const lazy = this.lazy;\n\n    const traverse = function (node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach(child => {\n        child.visible = filterNodeMethod.call(child, value, child.data, child);\n        traverse(child);\n      });\n\n      if (!node.visible && childNodes.length) {\n        let allHidden = true;\n        allHidden = !childNodes.some(child => child.visible);\n\n        if (node.root) {\n          node.root.visible = allHidden === false;\n        } else {\n          node.visible = allHidden === false;\n        }\n      }\n\n      if (!value) return;\n      if (node.visible && !node.isLeaf && !lazy) node.expand();\n    };\n\n    traverse(this);\n  }\n\n  setData(newVal) {\n    const instanceChanged = newVal !== this.root.data;\n\n    if (instanceChanged) {\n      this.root.setData(newVal);\n\n      this._initDefaultCheckedNodes();\n    } else {\n      this.root.updateChildren();\n    }\n  }\n\n  getNode(data) {\n    if (data instanceof Node) return data;\n    const key = typeof data !== \"object\" ? data : getNodeKey(this.key, data);\n    return this.nodesMap[key] || null;\n  }\n\n  insertBefore(data, refData) {\n    const refNode = this.getNode(refData);\n    refNode.parent.insertBefore({\n      data\n    }, refNode);\n  }\n\n  insertAfter(data, refData) {\n    const refNode = this.getNode(refData);\n    refNode.parent.insertAfter({\n      data\n    }, refNode);\n  }\n\n  remove(data) {\n    const node = this.getNode(data);\n\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null;\n      }\n\n      node.parent.removeChild(node);\n    }\n  }\n\n  append(data, parentData) {\n    const parentNode = parentData ? this.getNode(parentData) : this.root;\n\n    if (parentNode) {\n      parentNode.insertChild({\n        data\n      });\n    }\n  }\n\n  _initDefaultCheckedNodes() {\n    const defaultCheckedKeys = this.defaultCheckedKeys || [];\n    const nodesMap = this.nodesMap;\n    defaultCheckedKeys.forEach(checkedKey => {\n      const node = nodesMap[checkedKey];\n\n      if (node) {\n        node.setChecked(true, !this.checkStrictly);\n      }\n    });\n  }\n\n  _initDefaultCheckedNode(node) {\n    const defaultCheckedKeys = this.defaultCheckedKeys || [];\n\n    if (defaultCheckedKeys.indexOf(node.key) !== -1) {\n      node.setChecked(true, !this.checkStrictly);\n    }\n  }\n\n  setDefaultCheckedKey(newVal) {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal;\n\n      this._initDefaultCheckedNodes();\n    }\n  }\n\n  registerNode(node) {\n    const key = this.key;\n    if (!node || !node.data) return;\n\n    if (!key) {\n      this.nodesMap[node.id] = node;\n    } else {\n      const nodeKey = node.key;\n      if (nodeKey !== void 0) this.nodesMap[node.key] = node;\n    }\n  }\n\n  deregisterNode(node) {\n    const key = this.key;\n    if (!key || !node || !node.data) return;\n    node.childNodes.forEach(child => {\n      this.deregisterNode(child);\n    });\n    delete this.nodesMap[node.key];\n  }\n\n  getCheckedNodes(leafOnly = false, includeHalfChecked = false) {\n    const checkedNodes = [];\n\n    const traverse = function (node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach(child => {\n        if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {\n          checkedNodes.push(child.data);\n        }\n\n        traverse(child);\n      });\n    };\n\n    traverse(this);\n    return checkedNodes;\n  }\n\n  getCheckedKeys(leafOnly = false) {\n    return this.getCheckedNodes(leafOnly).map(data => (data || {})[this.key]);\n  }\n\n  getHalfCheckedNodes() {\n    const nodes = [];\n\n    const traverse = function (node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach(child => {\n        if (child.indeterminate) {\n          nodes.push(child.data);\n        }\n\n        traverse(child);\n      });\n    };\n\n    traverse(this);\n    return nodes;\n  }\n\n  getHalfCheckedKeys() {\n    return this.getHalfCheckedNodes().map(data => (data || {})[this.key]);\n  }\n\n  _getAllNodes() {\n    const allNodes = [];\n    const nodesMap = this.nodesMap;\n\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey]);\n      }\n    }\n\n    return allNodes;\n  }\n\n  updateChildren(key, data) {\n    const node = this.nodesMap[key];\n    if (!node) return;\n    const childNodes = node.childNodes;\n\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i];\n      this.remove(child.data);\n    }\n\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i];\n      this.append(child, node.data);\n    }\n  }\n\n  _setCheckedKeys(key, leafOnly = false, checkedKeys) {\n    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level);\n\n    const cache = Object.create(null);\n    const keys = Object.keys(checkedKeys);\n    allNodes.forEach(node => node.setChecked(false, false));\n\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i];\n      const nodeKey = node.data[key].toString();\n      const checked = keys.indexOf(nodeKey) > -1;\n\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false);\n        }\n\n        continue;\n      }\n\n      let parent = node.parent;\n\n      while (parent && parent.level > 0) {\n        cache[parent.data[key]] = true;\n        parent = parent.parent;\n      }\n\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false);\n        continue;\n      }\n\n      node.setChecked(true, true);\n\n      if (leafOnly) {\n        node.setChecked(false, false);\n\n        const traverse = function (node2) {\n          const childNodes = node2.childNodes;\n          childNodes.forEach(child => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false);\n            }\n\n            traverse(child);\n          });\n        };\n\n        traverse(node);\n      }\n    }\n  }\n\n  setCheckedNodes(array, leafOnly = false) {\n    const key = this.key;\n    const checkedKeys = {};\n    array.forEach(item => {\n      checkedKeys[(item || {})[key]] = true;\n    });\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys);\n  }\n\n  setCheckedKeys(keys, leafOnly = false) {\n    this.defaultCheckedKeys = keys;\n    const key = this.key;\n    const checkedKeys = {};\n    keys.forEach(key2 => {\n      checkedKeys[key2] = true;\n    });\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys);\n  }\n\n  setDefaultExpandedKeys(keys) {\n    keys = keys || [];\n    this.defaultExpandedKeys = keys;\n    keys.forEach(key => {\n      const node = this.getNode(key);\n      if (node) node.expand(null, this.autoExpandParent);\n    });\n  }\n\n  setChecked(data, checked, deep) {\n    const node = this.getNode(data);\n\n    if (node) {\n      node.setChecked(!!checked, deep);\n    }\n  }\n\n  getCurrentNode() {\n    return this.currentNode;\n  }\n\n  setCurrentNode(currentNode) {\n    const prevCurrentNode = this.currentNode;\n\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false;\n    }\n\n    this.currentNode = currentNode;\n    this.currentNode.isCurrent = true;\n  }\n\n  setUserCurrentNode(node, shouldAutoExpandParent = true) {\n    const key = node[this.key];\n    const currNode = this.nodesMap[key];\n    this.setCurrentNode(currNode);\n\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true);\n    }\n  }\n\n  setCurrentNodeKey(key, shouldAutoExpandParent = true) {\n    if (key === null || key === void 0) {\n      this.currentNode && (this.currentNode.isCurrent = false);\n      this.currentNode = null;\n      return;\n    }\n\n    const node = this.getNode(key);\n\n    if (node) {\n      this.setCurrentNode(node);\n\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true);\n      }\n    }\n  }\n\n}\n\nvar script = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n\n  setup(props) {\n    const nodeInstance = inject(\"NodeInstance\");\n    const tree = inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const {\n        data,\n        store\n      } = node;\n      return props.renderContent ? props.renderContent(h, {\n        _self: nodeInstance,\n        node,\n        data,\n        store\n      }) : tree.ctx.slots.default ? tree.ctx.slots.default({\n        node,\n        data\n      }) : h(\"span\", {\n        class: \"el-tree-node__label\"\n      }, [node.label]);\n    };\n  }\n\n});\nscript.__file = \"packages/tree/src/tree-node-content.vue\";\n\nfunction useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject(\"TreeNodeMap\", null);\n  const currentNodeMap = {\n    treeNodeExpand: node => {\n      if (props.node !== node) {\n        props.node.collapse();\n      }\n    },\n    children: []\n  };\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap);\n  }\n\n  provide(\"TreeNodeMap\", currentNodeMap);\n  return {\n    broadcastExpanded: node => {\n      if (!props.accordion) return;\n\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node);\n      }\n    }\n  };\n}\n\nfunction useDragNodeHandler({\n  props,\n  ctx,\n  el$,\n  dropIndicator$,\n  store\n}) {\n  const emitter = mitt();\n  provide(\"DragNodeEmitter\", emitter);\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null\n  });\n  emitter.on(\"tree-node-drag-start\", ({\n    event,\n    treeNode\n  }) => {\n    if (typeof props.allowDrag === \"function\" && !props.allowDrag(treeNode.node)) {\n      event.preventDefault();\n      return false;\n    }\n\n    event.dataTransfer.effectAllowed = \"move\";\n\n    try {\n      event.dataTransfer.setData(\"text/plain\", \"\");\n    } catch (e) {}\n\n    dragState.value.draggingNode = treeNode;\n    ctx.emit(\"node-drag-start\", treeNode.node, event);\n  });\n  emitter.on(\"tree-node-drag-over\", ({\n    event,\n    treeNode\n  }) => {\n    const dropNode = treeNode;\n    const oldDropNode = dragState.value.dropNode;\n\n    if (oldDropNode && oldDropNode !== dropNode) {\n      removeClass(oldDropNode.$el, \"is-drop-inner\");\n    }\n\n    const draggingNode = dragState.value.draggingNode;\n    if (!draggingNode || !dropNode) return;\n    let dropPrev = true;\n    let dropInner = true;\n    let dropNext = true;\n    let userAllowDropInner = true;\n\n    if (typeof props.allowDrop === \"function\") {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, \"prev\");\n      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, \"inner\");\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, \"next\");\n    }\n\n    event.dataTransfer.dropEffect = dropInner ? \"move\" : \"none\";\n\n    if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {\n      if (oldDropNode) {\n        ctx.emit(\"node-drag-leave\", draggingNode.node, oldDropNode.node, event);\n      }\n\n      ctx.emit(\"node-drag-enter\", draggingNode.node, dropNode.node, event);\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode;\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false;\n    }\n\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false;\n    }\n\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false;\n    }\n\n    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {\n      dropPrev = false;\n      dropInner = false;\n      dropNext = false;\n    }\n\n    const targetPosition = dropNode.$el.getBoundingClientRect();\n    const treePosition = el$.value.getBoundingClientRect();\n    let dropType;\n    const prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;\n    const nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;\n    let indicatorTop = -9999;\n    const distance = event.clientY - targetPosition.top;\n\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = \"before\";\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = \"after\";\n    } else if (dropInner) {\n      dropType = \"inner\";\n    } else {\n      dropType = \"none\";\n    }\n\n    const iconPosition = dropNode.$el.querySelector(\".el-tree-node__expand-icon\").getBoundingClientRect();\n    const dropIndicator = dropIndicator$.value;\n\n    if (dropType === \"before\") {\n      indicatorTop = iconPosition.top - treePosition.top;\n    } else if (dropType === \"after\") {\n      indicatorTop = iconPosition.bottom - treePosition.top;\n    }\n\n    dropIndicator.style.top = indicatorTop + \"px\";\n    dropIndicator.style.left = iconPosition.right - treePosition.left + \"px\";\n\n    if (dropType === \"inner\") {\n      addClass(dropNode.$el, \"is-drop-inner\");\n    } else {\n      removeClass(dropNode.$el, \"is-drop-inner\");\n    }\n\n    dragState.value.showDropIndicator = dropType === \"before\" || dropType === \"after\";\n    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;\n    dragState.value.dropType = dropType;\n    ctx.emit(\"node-drag-over\", draggingNode.node, dropNode.node, event);\n  });\n  emitter.on(\"tree-node-drag-end\", event => {\n    const {\n      draggingNode,\n      dropType,\n      dropNode\n    } = dragState.value;\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = {\n        data: draggingNode.node.data\n      };\n\n      if (dropType !== \"none\") {\n        draggingNode.node.remove();\n      }\n\n      if (dropType === \"before\") {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"after\") {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"inner\") {\n        dropNode.node.insertChild(draggingNodeCopy);\n      }\n\n      if (dropType !== \"none\") {\n        store.value.registerNode(draggingNodeCopy);\n      }\n\n      removeClass(dropNode.$el, \"is-drop-inner\");\n      ctx.emit(\"node-drag-end\", draggingNode.node, dropNode.node, dropType, event);\n\n      if (dropType !== \"none\") {\n        ctx.emit(\"node-drop\", draggingNode.node, dropNode.node, dropType, event);\n      }\n    }\n\n    if (draggingNode && !dropNode) {\n      ctx.emit(\"node-drag-end\", draggingNode.node, null, dropType, event);\n    }\n\n    dragState.value.showDropIndicator = false;\n    dragState.value.draggingNode = null;\n    dragState.value.dropNode = null;\n    dragState.value.allowDrop = true;\n  });\n  return {\n    dragState\n  };\n}\n\nfunction useDragNodeEmitter() {\n  const emitter = inject(\"DragNodeEmitter\");\n  return {\n    emitter\n  };\n}\n\nvar script$1 = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent: script\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({})\n    },\n    props: {\n      type: Object,\n      default: () => ({})\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"node-expand\"],\n\n  setup(props, ctx) {\n    const {\n      broadcastExpanded\n    } = useNodeExpandEventBroadcast(props);\n    const tree = inject(\"RootTree\");\n    const expanded = ref(false);\n    const childNodeRendered = ref(false);\n    const oldChecked = ref(null);\n    const oldIndeterminate = ref(null);\n    const node$ = ref(null);\n    const {\n      emitter\n    } = useDragNodeEmitter();\n    const instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n\n    if (!tree) {\n      console.warn(\"Can not find node's tree.\");\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n\n    const childrenKey = tree.props[\"children\"] || \"children\";\n    watch(() => {\n      const children = props.node.data[childrenKey];\n      return children && [...children];\n    }, () => {\n      props.node.updateChildren();\n    });\n    watch(() => props.node.indeterminate, val => {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(() => props.node.checked, val => {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(() => props.node.expanded, val => {\n      nextTick(() => expanded.value = val);\n\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n\n    const getNodeKey$1 = node => {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n\n    const handleSelectChange = (checked, indeterminate) => {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n\n    const handleClick = () => {\n      const store = tree.store.value;\n      store.setCurrentNode(props.node);\n      tree.ctx.emit(\"current-change\", store.currentNode ? store.currentNode.data : null, store.currentNode);\n      tree.currentNode.value = props.node;\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: {\n            checked: !props.node.checked\n          }\n        });\n      }\n\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance);\n    };\n\n    const handleContextMenu = event => {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return;\n\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand();\n        ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n      }\n    };\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(() => {\n        const store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n\n    const handleChildNodeExpand = (nodeData, node, instance2) => {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n\n    const handleDragStart = event => {\n      if (!tree.props.draggable) return;\n      emitter.emit(\"tree-node-drag-start\", {\n        event,\n        treeNode: props\n      });\n    };\n\n    const handleDragOver = event => {\n      if (!tree.props.draggable) return;\n      emitter.emit(\"tree-node-drag-over\", {\n        event,\n        treeNode: {\n          $el: node$.value,\n          node: props.node\n        }\n      });\n      event.preventDefault();\n    };\n\n    const handleDrop = event => {\n      event.preventDefault();\n    };\n\n    const handleDragEnd = event => {\n      if (!tree.props.draggable) return;\n      emitter.emit(\"tree-node-drag-end\", event);\n    };\n\n    return {\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      emitter,\n      getNodeKey: getNodeKey$1,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd\n    };\n  }\n\n});\nconst _hoisted_1 = {\n  key: 1,\n  class: \"el-tree-node__loading-icon el-icon-loading\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n\n  const _component_node_content = resolveComponent(\"node-content\");\n\n  const _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  const _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n\n  return withDirectives((openBlock(), createBlock(\"div\", {\n    ref: \"node$\",\n    class: [\"el-tree-node\", {\n      \"is-expanded\": _ctx.expanded,\n      \"is-current\": _ctx.node.isCurrent,\n      \"is-hidden\": !_ctx.node.visible,\n      \"is-focusable\": !_ctx.node.disabled,\n      \"is-checked\": !_ctx.node.disabled && _ctx.node.checked\n    }],\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: _cache[3] || (_cache[3] = withModifiers((...args) => _ctx.handleClick && _ctx.handleClick(...args), [\"stop\"])),\n    onContextmenu: _cache[4] || (_cache[4] = (...args) => _ctx.handleContextMenu && _ctx.handleContextMenu(...args)),\n    onDragstart: _cache[5] || (_cache[5] = withModifiers((...args) => _ctx.handleDragStart && _ctx.handleDragStart(...args), [\"stop\"])),\n    onDragover: _cache[6] || (_cache[6] = withModifiers((...args) => _ctx.handleDragOver && _ctx.handleDragOver(...args), [\"stop\"])),\n    onDragend: _cache[7] || (_cache[7] = withModifiers((...args) => _ctx.handleDragEnd && _ctx.handleDragEnd(...args), [\"stop\"])),\n    onDrop: _cache[8] || (_cache[8] = withModifiers((...args) => _ctx.handleDrop && _ctx.handleDrop(...args), [\"stop\"]))\n  }, [createVNode(\"div\", {\n    class: \"el-tree-node__content\",\n    style: {\n      \"padding-left\": (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\"\n    }\n  }, [createVNode(\"span\", {\n    class: [{\n      \"is-leaf\": _ctx.node.isLeaf,\n      expanded: !_ctx.node.isLeaf && _ctx.expanded\n    }, \"el-tree-node__expand-icon\", _ctx.tree.props.iconClass ? _ctx.tree.props.iconClass : \"el-icon-caret-right\"],\n    onClick: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.handleExpandIconClick && _ctx.handleExpandIconClick(...args), [\"stop\"]))\n  }, null, 2), _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 0,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: !!_ctx.node.disabled,\n    onClick: _cache[2] || (_cache[2] = withModifiers(() => {}, [\"stop\"])),\n    onChange: _ctx.handleCheckChange\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true), _ctx.node.loading ? (openBlock(), createBlock(\"span\", _hoisted_1)) : createCommentVNode(\"v-if\", true), createVNode(_component_node_content, {\n    node: _ctx.node,\n    \"render-content\": _ctx.renderContent\n  }, null, 8, [\"node\", \"render-content\"])], 4), createVNode(_component_el_collapse_transition, null, {\n    default: withCtx(() => [!_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createBlock(\"div\", {\n      key: 0,\n      class: \"el-tree-node__children\",\n      role: \"group\",\n      \"aria-expanded\": _ctx.expanded\n    }, [(openBlock(true), createBlock(Fragment, null, renderList(_ctx.node.childNodes, child => {\n      return openBlock(), createBlock(_component_el_tree_node, {\n        key: _ctx.getNodeKey(child),\n        \"render-content\": _ctx.renderContent,\n        \"render-after-expand\": _ctx.renderAfterExpand,\n        \"show-checkbox\": _ctx.showCheckbox,\n        node: child,\n        onNodeExpand: _ctx.handleChildNodeExpand\n      }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"onNodeExpand\"]);\n    }), 128))], 8, [\"aria-expanded\"])), [[vShow, _ctx.expanded]]) : createCommentVNode(\"v-if\", true)]),\n    _: 1\n  })], 42, [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\"])), [[vShow, _ctx.node.visible]]);\n}\n\nscript$1.render = render;\nscript$1.__file = \"packages/tree/src/tree-node.vue\";\n\nfunction useKeydown({\n  el$\n}, store) {\n  const treeItems = ref([]);\n  const checkboxItems = ref([]);\n  onMounted(() => {\n    initTabIndex();\n    on(el$.value, \"keydown\", handleKeydown);\n  });\n  onBeforeUnmount(() => {\n    off(el$.value, \"keydown\", handleKeydown);\n  });\n  onUpdated(() => {\n    treeItems.value = Array.from(el$.value.querySelectorAll(\"[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n  });\n  watch(checkboxItems, val => {\n    val.forEach(checkbox => {\n      checkbox.setAttribute(\"tabindex\", \"-1\");\n    });\n  });\n\n  const handleKeydown = ev => {\n    const currentItem = ev.target;\n    if (currentItem.className.indexOf(\"el-tree-node\") === -1) return;\n    const code = ev.code;\n    treeItems.value = Array.from(el$.value.querySelectorAll(\".is-focusable[role=treeitem]\"));\n    const currentIndex = treeItems.value.indexOf(currentItem);\n    let nextIndex;\n\n    if ([EVENT_CODE.up, EVENT_CODE.down].indexOf(code) > -1) {\n      ev.preventDefault();\n\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex !== 0 ? currentIndex - 1 : treeItems.value.length - 1;\n        const startIndex = nextIndex;\n\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus) break;\n          nextIndex--;\n\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1;\n          }\n        }\n      } else {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex < treeItems.value.length - 1 ? currentIndex + 1 : 0;\n        const startIndex = nextIndex;\n\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus) break;\n          nextIndex++;\n\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0;\n          }\n        }\n      }\n\n      nextIndex !== -1 && treeItems.value[nextIndex].focus();\n    }\n\n    if ([EVENT_CODE.left, EVENT_CODE.right].indexOf(code) > -1) {\n      ev.preventDefault();\n      currentItem.click();\n    }\n\n    const hasInput = currentItem.querySelector('[type=\"checkbox\"]');\n\n    if ([EVENT_CODE.enter, EVENT_CODE.space].indexOf(code) > -1 && hasInput) {\n      ev.preventDefault();\n      hasInput.click();\n    }\n  };\n\n  const initTabIndex = () => {\n    var _a;\n\n    treeItems.value = Array.from(el$.value.querySelectorAll(\".is-focusable[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n    const checkedItem = el$.value.querySelectorAll(\".is-checked[role=treeitem]\");\n\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute(\"tabindex\", \"0\");\n      return;\n    }\n\n    (_a = treeItems.value[0]) == null ? void 0 : _a.setAttribute(\"tabindex\", \"0\");\n  };\n}\n\nvar script$2 = defineComponent({\n  name: \"ElTree\",\n  components: {\n    ElTreeNode: script$1\n  },\n  props: {\n    data: {\n      type: Array\n    },\n    emptyText: {\n      type: String\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true\n    },\n    defaultCheckedKeys: Array,\n    defaultExpandedKeys: Array,\n    currentNodeKey: [String, Number],\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object,\n\n      default() {\n        return {\n          children: \"children\",\n          label: \"label\",\n          disabled: \"disabled\"\n        };\n      }\n\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    highlightCurrent: Boolean,\n    load: Function,\n    filterNodeMethod: Function,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18\n    },\n    iconClass: String\n  },\n  emits: [\"check-change\", \"current-change\", \"node-click\", \"node-contextmenu\", \"node-collapse\", \"node-expand\", \"check\", \"node-drag-start\", \"node-drag-end\", \"node-drop\", \"node-drag-leave\", \"node-drag-enter\", \"node-drag-over\"],\n\n  setup(props, ctx) {\n    const {\n      t\n    } = useLocaleInject();\n    const store = ref(new TreeStore({\n      key: props.nodeKey,\n      data: props.data,\n      lazy: props.lazy,\n      props: props.props,\n      load: props.load,\n      currentNodeKey: props.currentNodeKey,\n      checkStrictly: props.checkStrictly,\n      checkDescendants: props.checkDescendants,\n      defaultCheckedKeys: props.defaultCheckedKeys,\n      defaultExpandedKeys: props.defaultExpandedKeys,\n      autoExpandParent: props.autoExpandParent,\n      defaultExpandAll: props.defaultExpandAll,\n      filterNodeMethod: props.filterNodeMethod\n    }));\n    store.value.initialize();\n    const root = ref(store.value.root);\n    const currentNode = ref(null);\n    const el$ = ref(null);\n    const dropIndicator$ = ref(null);\n    const {\n      broadcastExpanded\n    } = useNodeExpandEventBroadcast(props);\n    const {\n      dragState\n    } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store\n    });\n    useKeydown({\n      el$\n    }, store);\n    const isEmpty = computed(() => {\n      const {\n        childNodes\n      } = root.value;\n      return !childNodes || childNodes.length === 0 || childNodes.every(({\n        visible\n      }) => !visible);\n    });\n    watch(() => props.defaultCheckedKeys, newVal => {\n      store.value.setDefaultCheckedKey(newVal);\n    });\n    watch(() => props.defaultExpandedKeys, newVal => {\n      store.value.defaultExpandedKeys = newVal;\n      store.value.setDefaultExpandedKeys(newVal);\n    });\n    watch(() => props.data, newVal => {\n      store.value.setData(newVal);\n    }, {\n      deep: true\n    });\n    watch(() => props.checkStrictly, newVal => {\n      store.value.checkStrictly = newVal;\n    });\n\n    const filter = value => {\n      if (!props.filterNodeMethod) throw new Error(\"[Tree] filterNodeMethod is required when filter\");\n      store.value.filter(value);\n    };\n\n    const getNodeKey$1 = node => {\n      return getNodeKey(props.nodeKey, node.data);\n    };\n\n    const getNodePath = data => {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in getNodePath\");\n      const node = store.value.getNode(data);\n      if (!node) return [];\n      const path = [node.data];\n      let parent = node.parent;\n\n      while (parent && parent !== root.value) {\n        path.push(parent.data);\n        parent = parent.parent;\n      }\n\n      return path.reverse();\n    };\n\n    const getCheckedNodes = (leafOnly, includeHalfChecked) => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked);\n    };\n\n    const getCheckedKeys = leafOnly => {\n      return store.value.getCheckedKeys(leafOnly);\n    };\n\n    const getCurrentNode = () => {\n      const currentNode2 = store.value.getCurrentNode();\n      return currentNode2 ? currentNode2.data : null;\n    };\n\n    const getCurrentKey = () => {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in getCurrentKey\");\n      const currentNode2 = getCurrentNode();\n      return currentNode2 ? currentNode2[props.nodeKey] : null;\n    };\n\n    const setCheckedNodes = (nodes, leafOnly) => {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in setCheckedNodes\");\n      store.value.setCheckedNodes(nodes, leafOnly);\n    };\n\n    const setCheckedKeys = (keys, leafOnly) => {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in setCheckedKeys\");\n      store.value.setCheckedKeys(keys, leafOnly);\n    };\n\n    const setChecked = (data, checked, deep) => {\n      store.value.setChecked(data, checked, deep);\n    };\n\n    const getHalfCheckedNodes = () => {\n      return store.value.getHalfCheckedNodes();\n    };\n\n    const getHalfCheckedKeys = () => {\n      return store.value.getHalfCheckedKeys();\n    };\n\n    const setCurrentNode = (node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in setCurrentNode\");\n      store.value.setUserCurrentNode(node, shouldAutoExpandParent);\n    };\n\n    const setCurrentKey = (key, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in setCurrentKey\");\n      store.value.setCurrentNodeKey(key, shouldAutoExpandParent);\n    };\n\n    const getNode = data => {\n      return store.value.getNode(data);\n    };\n\n    const remove = data => {\n      store.value.remove(data);\n    };\n\n    const append = (data, parentNode) => {\n      store.value.append(data, parentNode);\n    };\n\n    const insertBefore = (data, refNode) => {\n      store.value.insertBefore(data, refNode);\n    };\n\n    const insertAfter = (data, refNode) => {\n      store.value.insertAfter(data, refNode);\n    };\n\n    const handleNodeExpand = (nodeData, node, instance) => {\n      broadcastExpanded(node);\n      ctx.emit(\"node-expand\", nodeData, node, instance);\n    };\n\n    const updateKeyChildren = (key, data) => {\n      if (!props.nodeKey) throw new Error(\"[Tree] nodeKey is required in updateKeyChild\");\n      store.value.updateChildren(key, data);\n    };\n\n    provide(\"RootTree\", {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance()\n    });\n    return {\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n      isEmpty,\n      filter,\n      getNodeKey: getNodeKey$1,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren\n    };\n  }\n\n});\nconst _hoisted_1$1 = {\n  key: 0,\n  class: \"el-tree__empty-block\"\n};\nconst _hoisted_2 = {\n  class: \"el-tree__empty-text\"\n};\nconst _hoisted_3 = {\n  ref: \"dropIndicator$\",\n  class: \"el-tree__drop-indicator\"\n};\n\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree_node = resolveComponent(\"el-tree-node\");\n\n  return openBlock(), createBlock(\"div\", {\n    ref: \"el$\",\n    class: [\"el-tree\", {\n      \"el-tree--highlight-current\": _ctx.highlightCurrent,\n      \"is-dragging\": !!_ctx.dragState.draggingNode,\n      \"is-drop-not-allow\": !_ctx.dragState.allowDrop,\n      \"is-drop-inner\": _ctx.dragState.dropType === \"inner\"\n    }],\n    role: \"tree\"\n  }, [(openBlock(true), createBlock(Fragment, null, renderList(_ctx.root.childNodes, child => {\n    return openBlock(), createBlock(_component_el_tree_node, {\n      key: _ctx.getNodeKey(child),\n      node: child,\n      props: _ctx.props,\n      accordion: _ctx.accordion,\n      \"render-after-expand\": _ctx.renderAfterExpand,\n      \"show-checkbox\": _ctx.showCheckbox,\n      \"render-content\": _ctx.renderContent,\n      onNodeExpand: _ctx.handleNodeExpand\n    }, null, 8, [\"node\", \"props\", \"accordion\", \"render-after-expand\", \"show-checkbox\", \"render-content\", \"onNodeExpand\"]);\n  }), 128)), _ctx.isEmpty ? (openBlock(), createBlock(\"div\", _hoisted_1$1, [createVNode(\"span\", _hoisted_2, toDisplayString(_ctx.emptyText || _ctx.t(\"el.tree.emptyText\")), 1)])) : createCommentVNode(\"v-if\", true), withDirectives(createVNode(\"div\", _hoisted_3, null, 512), [[vShow, _ctx.dragState.showDropIndicator]])], 2);\n}\n\nscript$2.render = render$1;\nscript$2.__file = \"packages/tree/src/tree.vue\";\n\nscript$2.install = app => {\n  app.component(script$2.name, script$2);\n};\n\nconst _Tree = script$2;\nexport default _Tree;","map":{"version":3,"names":["reactive","defineComponent","inject","h","provide","ref","getCurrentInstance","watch","nextTick","resolveComponent","withDirectives","openBlock","createBlock","withModifiers","createVNode","createCommentVNode","withCtx","Fragment","renderList","vShow","onMounted","onBeforeUnmount","onUpdated","computed","toDisplayString","ElCollapseTransition","ElCheckbox","mitt","removeClass","addClass","on","off","EVENT_CODE","useLocaleInject","EMPTY_OBJ","process","env","NODE_ENV","Object","freeze","EMPTY_ARR","hasOwnProperty","prototype","hasOwn","val","key","call","NODE_KEY","markNodeData","node","data","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","getChildState","all","none","allWithoutDisable","i","j","length","n","checked","indeterminate","disabled","half","reInitChecked","childNodes","parent","level","store","checkStrictly","getPropertyFromData","prop","props","config","dataProp","nodeIdSeed","Node","constructor","options","text","expanded","visible","isCurrent","canFocus","name","loaded","loading","initialize","Error","registerNode","isLeaf","isLeafByUser","lazy","setData","defaultExpandAll","expand","Array","isArray","defaultExpandedKeys","indexOf","autoExpandParent","currentNodeKey","currentNode","_initDefaultCheckedNode","updateLeafState","children","insertChild","label","nodeKey","nextSibling","index","previousSibling","contains","target","deep","some","child","remove","removeChild","batch","getChildren","push","splice","assign","insertBefore","insertAfter","dataIndex","deregisterNode","removeChildByData","targetNode","callback","expandParent","done","forEach","item","shouldLoadData","loadData","setChecked","doCreateChildren","array","defaultProps","collapse","load","recursion","passValue","checkDescendants","handleDescendants","isCheck","all2","forceInit","updateChildren","newData","oldData","map","newDataMap","newNodes","isNodeExists","findIndex","keys","resolve","TreeStore","option","nodesMap","root","loadFn","_initDefaultCheckedNodes","filter","filterNodeMethod","traverse","allHidden","newVal","instanceChanged","getNode","refData","refNode","append","parentData","parentNode","defaultCheckedKeys","checkedKey","setDefaultCheckedKey","getCheckedNodes","leafOnly","includeHalfChecked","checkedNodes","getCheckedKeys","getHalfCheckedNodes","nodes","getHalfCheckedKeys","_getAllNodes","allNodes","_setCheckedKeys","checkedKeys","sort","a","b","cache","create","toString","node2","setCheckedNodes","setCheckedKeys","key2","setDefaultExpandedKeys","getCurrentNode","setCurrentNode","prevCurrentNode","setUserCurrentNode","shouldAutoExpandParent","currNode","setCurrentNodeKey","script","type","required","renderContent","Function","setup","nodeInstance","tree","_self","ctx","slots","default","class","__file","useNodeExpandEventBroadcast","parentNodeMap","currentNodeMap","treeNodeExpand","broadcastExpanded","accordion","childNode","useDragNodeHandler","el$","dropIndicator$","emitter","dragState","showDropIndicator","draggingNode","dropNode","allowDrop","dropType","event","treeNode","allowDrag","preventDefault","dataTransfer","effectAllowed","e","emit","oldDropNode","$el","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","targetPosition","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","querySelector","dropIndicator","bottom","style","left","right","draggingNodeCopy","useDragNodeEmitter","script$1","components","NodeContent","Boolean","renderAfterExpand","showCheckbox","emits","childNodeRendered","oldChecked","oldIndeterminate","node$","instance","console","warn","childrenKey","handleSelectChange","getNodeKey$1","handleClick","expandOnClickNode","handleExpandIconClick","checkOnClickNode","handleCheckChange","handleContextMenu","vnode","stopPropagation","ev","halfCheckedNodes","halfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","handleDragOver","handleDrop","handleDragEnd","_hoisted_1","render","_ctx","_cache","$props","$setup","$data","$options","_component_el_checkbox","_component_node_content","_component_el_tree_node","_component_el_collapse_transition","role","tabindex","onClick","args","onContextmenu","onDragstart","onDragover","onDragend","onDrop","indent","iconClass","onChange","onNodeExpand","_","useKeydown","treeItems","checkboxItems","initTabIndex","handleKeydown","from","querySelectorAll","checkbox","setAttribute","currentItem","className","code","currentIndex","nextIndex","up","down","startIndex","dataset","focus","click","hasInput","enter","space","_a","checkedItem","script$2","ElTreeNode","emptyText","String","Number","highlightCurrent","t","isEmpty","every","getNodePath","path","reverse","currentNode2","getCurrentKey","setCurrentKey","handleNodeExpand","updateKeyChildren","_hoisted_1$1","_hoisted_2","_hoisted_3","render$1","install","app","component","_Tree"],"sources":["D:/project/my_blog/blog-ui/node_modules/element-plus/es/el-tree/index.js"],"sourcesContent":["import { reactive, defineComponent, inject, h, provide, ref, getCurrentInstance, watch, nextTick, resolveComponent, withDirectives, openBlock, createBlock, withModifiers, createVNode, createCommentVNode, withCtx, Fragment, renderList, vShow, onMounted, onBeforeUnmount, onUpdated, computed, toDisplayString } from 'vue';\nimport ElCollapseTransition from '../el-collapse-transition';\nimport ElCheckbox from '../el-checkbox';\nimport mitt from 'mitt';\nimport { removeClass, addClass, on, off } from '../utils/dom';\nimport { EVENT_CODE } from '../utils/aria';\nimport { useLocaleInject } from '../hooks';\n\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\n\nconst NODE_KEY = \"$treeNodeId\";\nconst markNodeData = function(node, data) {\n  if (!data || data[NODE_KEY])\n    return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\nconst getNodeKey = function(key, data) {\n  if (!key)\n    return data[NODE_KEY];\n  return data[key];\n};\n\nconst getChildState = (node) => {\n  let all = true;\n  let none = true;\n  let allWithoutDisable = true;\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i];\n    if (n.checked !== true || n.indeterminate) {\n      all = false;\n      if (!n.disabled) {\n        allWithoutDisable = false;\n      }\n    }\n    if (n.checked !== false || n.indeterminate) {\n      none = false;\n    }\n  }\n  return { all, none, allWithoutDisable, half: !all && !none };\n};\nconst reInitChecked = function(node) {\n  if (node.childNodes.length === 0)\n    return;\n  const { all, none, half } = getChildState(node.childNodes);\n  if (all) {\n    node.checked = true;\n    node.indeterminate = false;\n  } else if (half) {\n    node.checked = false;\n    node.indeterminate = true;\n  } else if (none) {\n    node.checked = false;\n    node.indeterminate = false;\n  }\n  const parent = node.parent;\n  if (!parent || parent.level === 0)\n    return;\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent);\n  }\n};\nconst getPropertyFromData = function(node, prop) {\n  const props = node.store.props;\n  const data = node.data || {};\n  const config = props[prop];\n  if (typeof config === \"function\") {\n    return config(data, node);\n  } else if (typeof config === \"string\") {\n    return data[config];\n  } else if (typeof config === \"undefined\") {\n    const dataProp = data[prop];\n    return dataProp === void 0 ? \"\" : dataProp;\n  }\n};\nlet nodeIdSeed = 0;\nclass Node {\n  constructor(options) {\n    this.id = nodeIdSeed++;\n    this.text = null;\n    this.checked = false;\n    this.indeterminate = false;\n    this.data = null;\n    this.expanded = false;\n    this.parent = null;\n    this.visible = true;\n    this.isCurrent = false;\n    this.canFocus = false;\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name];\n      }\n    }\n    this.level = 0;\n    this.loaded = false;\n    this.childNodes = [];\n    this.loading = false;\n    if (this.parent) {\n      this.level = this.parent.level + 1;\n    }\n  }\n  initialize() {\n    const store = this.store;\n    if (!store) {\n      throw new Error(\"[Node]store is required!\");\n    }\n    store.registerNode(this);\n    const props = store.props;\n    if (props && typeof props.isLeaf !== \"undefined\") {\n      const isLeaf = getPropertyFromData(this, \"isLeaf\");\n      if (typeof isLeaf === \"boolean\") {\n        this.isLeafByUser = isLeaf;\n      }\n    }\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data);\n      if (store.defaultExpandAll) {\n        this.expanded = true;\n        this.canFocus = true;\n      }\n    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n      this.expand();\n    }\n    if (!Array.isArray(this.data)) {\n      markNodeData(this, this.data);\n    }\n    if (!this.data)\n      return;\n    const defaultExpandedKeys = store.defaultExpandedKeys;\n    const key = store.key;\n    if (key && defaultExpandedKeys && defaultExpandedKeys.indexOf(this.key) !== -1) {\n      this.expand(null, store.autoExpandParent);\n    }\n    if (key && store.currentNodeKey !== void 0 && this.key === store.currentNodeKey) {\n      store.currentNode = this;\n      store.currentNode.isCurrent = true;\n    }\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this);\n    }\n    this.updateLeafState();\n    if (this.parent && (this.level === 1 || this.parent.expanded === true))\n      this.canFocus = true;\n  }\n  setData(data) {\n    if (!Array.isArray(data)) {\n      markNodeData(this, data);\n    }\n    this.data = data;\n    this.childNodes = [];\n    let children;\n    if (this.level === 0 && this.data instanceof Array) {\n      children = this.data;\n    } else {\n      children = getPropertyFromData(this, \"children\") || [];\n    }\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({ data: children[i] });\n    }\n  }\n  get label() {\n    return getPropertyFromData(this, \"label\");\n  }\n  get key() {\n    const nodeKey = this.store.key;\n    if (this.data)\n      return this.data[nodeKey];\n    return null;\n  }\n  get disabled() {\n    return getPropertyFromData(this, \"disabled\");\n  }\n  get nextSibling() {\n    const parent = this.parent;\n    if (parent) {\n      const index = parent.childNodes.indexOf(this);\n      if (index > -1) {\n        return parent.childNodes[index + 1];\n      }\n    }\n    return null;\n  }\n  get previousSibling() {\n    const parent = this.parent;\n    if (parent) {\n      const index = parent.childNodes.indexOf(this);\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null;\n      }\n    }\n    return null;\n  }\n  contains(target, deep = true) {\n    return (this.childNodes || []).some((child) => child === target || deep && child.contains(target));\n  }\n  remove() {\n    const parent = this.parent;\n    if (parent) {\n      parent.removeChild(this);\n    }\n  }\n  insertChild(child, index, batch) {\n    if (!child)\n      throw new Error(\"insertChild error: child is required.\");\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true);\n        if (children.indexOf(child.data) === -1) {\n          if (typeof index === \"undefined\" || index < 0) {\n            children.push(child.data);\n          } else {\n            children.splice(index, 0, child.data);\n          }\n        }\n      }\n      Object.assign(child, {\n        parent: this,\n        store: this.store\n      });\n      child = reactive(new Node(child));\n      if (child instanceof Node) {\n        child.initialize();\n      }\n    }\n    child.level = this.level + 1;\n    if (typeof index === \"undefined\" || index < 0) {\n      this.childNodes.push(child);\n    } else {\n      this.childNodes.splice(index, 0, child);\n    }\n    this.updateLeafState();\n  }\n  insertBefore(child, ref) {\n    let index;\n    if (ref) {\n      index = this.childNodes.indexOf(ref);\n    }\n    this.insertChild(child, index);\n  }\n  insertAfter(child, ref) {\n    let index;\n    if (ref) {\n      index = this.childNodes.indexOf(ref);\n      if (index !== -1)\n        index += 1;\n    }\n    this.insertChild(child, index);\n  }\n  removeChild(child) {\n    const children = this.getChildren() || [];\n    const dataIndex = children.indexOf(child.data);\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1);\n    }\n    const index = this.childNodes.indexOf(child);\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child);\n      child.parent = null;\n      this.childNodes.splice(index, 1);\n    }\n    this.updateLeafState();\n  }\n  removeChildByData(data) {\n    let targetNode = null;\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i];\n        break;\n      }\n    }\n    if (targetNode) {\n      this.removeChild(targetNode);\n    }\n  }\n  expand(callback, expandParent) {\n    const done = () => {\n      if (expandParent) {\n        let parent = this.parent;\n        while (parent.level > 0) {\n          parent.expanded = true;\n          parent = parent.parent;\n        }\n      }\n      this.expanded = true;\n      if (callback)\n        callback();\n      this.childNodes.forEach((item) => {\n        item.canFocus = true;\n      });\n    };\n    if (this.shouldLoadData()) {\n      this.loadData((data) => {\n        if (Array.isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true);\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this);\n          }\n          done();\n        }\n      });\n    } else {\n      done();\n    }\n  }\n  doCreateChildren(array, defaultProps = {}) {\n    array.forEach((item) => {\n      this.insertChild(Object.assign({ data: item }, defaultProps), void 0, true);\n    });\n  }\n  collapse() {\n    this.expanded = false;\n    this.childNodes.forEach((item) => {\n      item.canFocus = false;\n    });\n  }\n  shouldLoadData() {\n    return this.store.lazy === true && this.store.load && !this.loaded;\n  }\n  updateLeafState() {\n    if (this.store.lazy === true && this.loaded !== true && typeof this.isLeafByUser !== \"undefined\") {\n      this.isLeaf = this.isLeafByUser;\n      return;\n    }\n    const childNodes = this.childNodes;\n    if (!this.store.lazy || this.store.lazy === true && this.loaded === true) {\n      this.isLeaf = !childNodes || childNodes.length === 0;\n      return;\n    }\n    this.isLeaf = false;\n  }\n  setChecked(value, deep, recursion, passValue) {\n    this.indeterminate = value === \"half\";\n    this.checked = value === true;\n    if (this.store.checkStrictly)\n      return;\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const { all, allWithoutDisable } = getChildState(this.childNodes);\n      if (!this.isLeaf && (!all && allWithoutDisable)) {\n        this.checked = false;\n        value = false;\n      }\n      const handleDescendants = () => {\n        if (deep) {\n          const childNodes = this.childNodes;\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i];\n            passValue = passValue || value !== false;\n            const isCheck = child.disabled ? child.checked : passValue;\n            child.setChecked(isCheck, deep, true, passValue);\n          }\n          const { half, all: all2 } = getChildState(childNodes);\n          if (!all2) {\n            this.checked = all2;\n            this.indeterminate = half;\n          }\n        }\n      };\n      if (this.shouldLoadData()) {\n        this.loadData(() => {\n          handleDescendants();\n          reInitChecked(this);\n        }, {\n          checked: value !== false\n        });\n        return;\n      } else {\n        handleDescendants();\n      }\n    }\n    const parent = this.parent;\n    if (!parent || parent.level === 0)\n      return;\n    if (!recursion) {\n      reInitChecked(parent);\n    }\n  }\n  getChildren(forceInit = false) {\n    if (this.level === 0)\n      return this.data;\n    const data = this.data;\n    if (!data)\n      return null;\n    const props = this.store.props;\n    let children = \"children\";\n    if (props) {\n      children = props.children || \"children\";\n    }\n    if (data[children] === void 0) {\n      data[children] = null;\n    }\n    if (forceInit && !data[children]) {\n      data[children] = [];\n    }\n    return data[children];\n  }\n  updateChildren() {\n    const newData = this.getChildren() || [];\n    const oldData = this.childNodes.map((node) => node.data);\n    const newDataMap = {};\n    const newNodes = [];\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY];\n      const isNodeExists = !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0;\n      if (isNodeExists) {\n        newDataMap[key] = { index, data: item };\n      } else {\n        newNodes.push({ index, data: item });\n      }\n    });\n    if (!this.store.lazy) {\n      oldData.forEach((item) => {\n        if (!newDataMap[item[NODE_KEY]])\n          this.removeChildByData(item);\n      });\n    }\n    newNodes.forEach(({ index, data }) => {\n      this.insertChild({ data }, index);\n    });\n    this.updateLeafState();\n  }\n  loadData(callback, defaultProps = {}) {\n    if (this.store.lazy === true && this.store.load && !this.loaded && (!this.loading || Object.keys(defaultProps).length)) {\n      this.loading = true;\n      const resolve = (children) => {\n        this.loaded = true;\n        this.loading = false;\n        this.childNodes = [];\n        this.doCreateChildren(children, defaultProps);\n        this.updateLeafState();\n        if (callback) {\n          callback.call(this, children);\n        }\n      };\n      this.store.load(this, resolve);\n    } else {\n      if (callback) {\n        callback.call(this);\n      }\n    }\n  }\n}\n\nclass TreeStore {\n  constructor(options) {\n    this.currentNode = null;\n    this.currentNodeKey = null;\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option];\n      }\n    }\n    this.nodesMap = {};\n  }\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this\n    });\n    this.root.initialize();\n    if (this.lazy && this.load) {\n      const loadFn = this.load;\n      loadFn(this.root, (data) => {\n        this.root.doCreateChildren(data);\n        this._initDefaultCheckedNodes();\n      });\n    } else {\n      this._initDefaultCheckedNodes();\n    }\n  }\n  filter(value) {\n    const filterNodeMethod = this.filterNodeMethod;\n    const lazy = this.lazy;\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        child.visible = filterNodeMethod.call(child, value, child.data, child);\n        traverse(child);\n      });\n      if (!node.visible && childNodes.length) {\n        let allHidden = true;\n        allHidden = !childNodes.some((child) => child.visible);\n        if (node.root) {\n          node.root.visible = allHidden === false;\n        } else {\n          node.visible = allHidden === false;\n        }\n      }\n      if (!value)\n        return;\n      if (node.visible && !node.isLeaf && !lazy)\n        node.expand();\n    };\n    traverse(this);\n  }\n  setData(newVal) {\n    const instanceChanged = newVal !== this.root.data;\n    if (instanceChanged) {\n      this.root.setData(newVal);\n      this._initDefaultCheckedNodes();\n    } else {\n      this.root.updateChildren();\n    }\n  }\n  getNode(data) {\n    if (data instanceof Node)\n      return data;\n    const key = typeof data !== \"object\" ? data : getNodeKey(this.key, data);\n    return this.nodesMap[key] || null;\n  }\n  insertBefore(data, refData) {\n    const refNode = this.getNode(refData);\n    refNode.parent.insertBefore({ data }, refNode);\n  }\n  insertAfter(data, refData) {\n    const refNode = this.getNode(refData);\n    refNode.parent.insertAfter({ data }, refNode);\n  }\n  remove(data) {\n    const node = this.getNode(data);\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null;\n      }\n      node.parent.removeChild(node);\n    }\n  }\n  append(data, parentData) {\n    const parentNode = parentData ? this.getNode(parentData) : this.root;\n    if (parentNode) {\n      parentNode.insertChild({ data });\n    }\n  }\n  _initDefaultCheckedNodes() {\n    const defaultCheckedKeys = this.defaultCheckedKeys || [];\n    const nodesMap = this.nodesMap;\n    defaultCheckedKeys.forEach((checkedKey) => {\n      const node = nodesMap[checkedKey];\n      if (node) {\n        node.setChecked(true, !this.checkStrictly);\n      }\n    });\n  }\n  _initDefaultCheckedNode(node) {\n    const defaultCheckedKeys = this.defaultCheckedKeys || [];\n    if (defaultCheckedKeys.indexOf(node.key) !== -1) {\n      node.setChecked(true, !this.checkStrictly);\n    }\n  }\n  setDefaultCheckedKey(newVal) {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal;\n      this._initDefaultCheckedNodes();\n    }\n  }\n  registerNode(node) {\n    const key = this.key;\n    if (!node || !node.data)\n      return;\n    if (!key) {\n      this.nodesMap[node.id] = node;\n    } else {\n      const nodeKey = node.key;\n      if (nodeKey !== void 0)\n        this.nodesMap[node.key] = node;\n    }\n  }\n  deregisterNode(node) {\n    const key = this.key;\n    if (!key || !node || !node.data)\n      return;\n    node.childNodes.forEach((child) => {\n      this.deregisterNode(child);\n    });\n    delete this.nodesMap[node.key];\n  }\n  getCheckedNodes(leafOnly = false, includeHalfChecked = false) {\n    const checkedNodes = [];\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        if ((child.checked || includeHalfChecked && child.indeterminate) && (!leafOnly || leafOnly && child.isLeaf)) {\n          checkedNodes.push(child.data);\n        }\n        traverse(child);\n      });\n    };\n    traverse(this);\n    return checkedNodes;\n  }\n  getCheckedKeys(leafOnly = false) {\n    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key]);\n  }\n  getHalfCheckedNodes() {\n    const nodes = [];\n    const traverse = function(node) {\n      const childNodes = node.root ? node.root.childNodes : node.childNodes;\n      childNodes.forEach((child) => {\n        if (child.indeterminate) {\n          nodes.push(child.data);\n        }\n        traverse(child);\n      });\n    };\n    traverse(this);\n    return nodes;\n  }\n  getHalfCheckedKeys() {\n    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key]);\n  }\n  _getAllNodes() {\n    const allNodes = [];\n    const nodesMap = this.nodesMap;\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey]);\n      }\n    }\n    return allNodes;\n  }\n  updateChildren(key, data) {\n    const node = this.nodesMap[key];\n    if (!node)\n      return;\n    const childNodes = node.childNodes;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i];\n      this.remove(child.data);\n    }\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i];\n      this.append(child, node.data);\n    }\n  }\n  _setCheckedKeys(key, leafOnly = false, checkedKeys) {\n    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level);\n    const cache = Object.create(null);\n    const keys = Object.keys(checkedKeys);\n    allNodes.forEach((node) => node.setChecked(false, false));\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i];\n      const nodeKey = node.data[key].toString();\n      const checked = keys.indexOf(nodeKey) > -1;\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false);\n        }\n        continue;\n      }\n      let parent = node.parent;\n      while (parent && parent.level > 0) {\n        cache[parent.data[key]] = true;\n        parent = parent.parent;\n      }\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false);\n        continue;\n      }\n      node.setChecked(true, true);\n      if (leafOnly) {\n        node.setChecked(false, false);\n        const traverse = function(node2) {\n          const childNodes = node2.childNodes;\n          childNodes.forEach((child) => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false);\n            }\n            traverse(child);\n          });\n        };\n        traverse(node);\n      }\n    }\n  }\n  setCheckedNodes(array, leafOnly = false) {\n    const key = this.key;\n    const checkedKeys = {};\n    array.forEach((item) => {\n      checkedKeys[(item || {})[key]] = true;\n    });\n    this._setCheckedKeys(key, leafOnly, checkedKeys);\n  }\n  setCheckedKeys(keys, leafOnly = false) {\n    this.defaultCheckedKeys = keys;\n    const key = this.key;\n    const checkedKeys = {};\n    keys.forEach((key2) => {\n      checkedKeys[key2] = true;\n    });\n    this._setCheckedKeys(key, leafOnly, checkedKeys);\n  }\n  setDefaultExpandedKeys(keys) {\n    keys = keys || [];\n    this.defaultExpandedKeys = keys;\n    keys.forEach((key) => {\n      const node = this.getNode(key);\n      if (node)\n        node.expand(null, this.autoExpandParent);\n    });\n  }\n  setChecked(data, checked, deep) {\n    const node = this.getNode(data);\n    if (node) {\n      node.setChecked(!!checked, deep);\n    }\n  }\n  getCurrentNode() {\n    return this.currentNode;\n  }\n  setCurrentNode(currentNode) {\n    const prevCurrentNode = this.currentNode;\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false;\n    }\n    this.currentNode = currentNode;\n    this.currentNode.isCurrent = true;\n  }\n  setUserCurrentNode(node, shouldAutoExpandParent = true) {\n    const key = node[this.key];\n    const currNode = this.nodesMap[key];\n    this.setCurrentNode(currNode);\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true);\n    }\n  }\n  setCurrentNodeKey(key, shouldAutoExpandParent = true) {\n    if (key === null || key === void 0) {\n      this.currentNode && (this.currentNode.isCurrent = false);\n      this.currentNode = null;\n      return;\n    }\n    const node = this.getNode(key);\n    if (node) {\n      this.setCurrentNode(node);\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true);\n      }\n    }\n  }\n}\n\nvar script = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup(props) {\n    const nodeInstance = inject(\"NodeInstance\");\n    const tree = inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const { data, store } = node;\n      return props.renderContent ? props.renderContent(h, { _self: nodeInstance, node, data, store }) : tree.ctx.slots.default ? tree.ctx.slots.default({ node, data }) : h(\"span\", { class: \"el-tree-node__label\" }, [node.label]);\n    };\n  }\n});\n\nscript.__file = \"packages/tree/src/tree-node-content.vue\";\n\nfunction useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject(\"TreeNodeMap\", null);\n  const currentNodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse();\n      }\n    },\n    children: []\n  };\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap);\n  }\n  provide(\"TreeNodeMap\", currentNodeMap);\n  return {\n    broadcastExpanded: (node) => {\n      if (!props.accordion)\n        return;\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node);\n      }\n    }\n  };\n}\n\nfunction useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const emitter = mitt();\n  provide(\"DragNodeEmitter\", emitter);\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null\n  });\n  emitter.on(\"tree-node-drag-start\", ({ event, treeNode }) => {\n    if (typeof props.allowDrag === \"function\" && !props.allowDrag(treeNode.node)) {\n      event.preventDefault();\n      return false;\n    }\n    event.dataTransfer.effectAllowed = \"move\";\n    try {\n      event.dataTransfer.setData(\"text/plain\", \"\");\n    } catch (e) {\n    }\n    dragState.value.draggingNode = treeNode;\n    ctx.emit(\"node-drag-start\", treeNode.node, event);\n  });\n  emitter.on(\"tree-node-drag-over\", ({ event, treeNode }) => {\n    const dropNode = treeNode;\n    const oldDropNode = dragState.value.dropNode;\n    if (oldDropNode && oldDropNode !== dropNode) {\n      removeClass(oldDropNode.$el, \"is-drop-inner\");\n    }\n    const draggingNode = dragState.value.draggingNode;\n    if (!draggingNode || !dropNode)\n      return;\n    let dropPrev = true;\n    let dropInner = true;\n    let dropNext = true;\n    let userAllowDropInner = true;\n    if (typeof props.allowDrop === \"function\") {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, \"prev\");\n      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, \"inner\");\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, \"next\");\n    }\n    event.dataTransfer.dropEffect = dropInner ? \"move\" : \"none\";\n    if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {\n      if (oldDropNode) {\n        ctx.emit(\"node-drag-leave\", draggingNode.node, oldDropNode.node, event);\n      }\n      ctx.emit(\"node-drag-enter\", draggingNode.node, dropNode.node, event);\n    }\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode;\n    }\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false;\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false;\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false;\n    }\n    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {\n      dropPrev = false;\n      dropInner = false;\n      dropNext = false;\n    }\n    const targetPosition = dropNode.$el.getBoundingClientRect();\n    const treePosition = el$.value.getBoundingClientRect();\n    let dropType;\n    const prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;\n    const nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;\n    let indicatorTop = -9999;\n    const distance = event.clientY - targetPosition.top;\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = \"before\";\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = \"after\";\n    } else if (dropInner) {\n      dropType = \"inner\";\n    } else {\n      dropType = \"none\";\n    }\n    const iconPosition = dropNode.$el.querySelector(\".el-tree-node__expand-icon\").getBoundingClientRect();\n    const dropIndicator = dropIndicator$.value;\n    if (dropType === \"before\") {\n      indicatorTop = iconPosition.top - treePosition.top;\n    } else if (dropType === \"after\") {\n      indicatorTop = iconPosition.bottom - treePosition.top;\n    }\n    dropIndicator.style.top = indicatorTop + \"px\";\n    dropIndicator.style.left = iconPosition.right - treePosition.left + \"px\";\n    if (dropType === \"inner\") {\n      addClass(dropNode.$el, \"is-drop-inner\");\n    } else {\n      removeClass(dropNode.$el, \"is-drop-inner\");\n    }\n    dragState.value.showDropIndicator = dropType === \"before\" || dropType === \"after\";\n    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;\n    dragState.value.dropType = dropType;\n    ctx.emit(\"node-drag-over\", draggingNode.node, dropNode.node, event);\n  });\n  emitter.on(\"tree-node-drag-end\", (event) => {\n    const { draggingNode, dropType, dropNode } = dragState.value;\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data };\n      if (dropType !== \"none\") {\n        draggingNode.node.remove();\n      }\n      if (dropType === \"before\") {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"after\") {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"inner\") {\n        dropNode.node.insertChild(draggingNodeCopy);\n      }\n      if (dropType !== \"none\") {\n        store.value.registerNode(draggingNodeCopy);\n      }\n      removeClass(dropNode.$el, \"is-drop-inner\");\n      ctx.emit(\"node-drag-end\", draggingNode.node, dropNode.node, dropType, event);\n      if (dropType !== \"none\") {\n        ctx.emit(\"node-drop\", draggingNode.node, dropNode.node, dropType, event);\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit(\"node-drag-end\", draggingNode.node, null, dropType, event);\n    }\n    dragState.value.showDropIndicator = false;\n    dragState.value.draggingNode = null;\n    dragState.value.dropNode = null;\n    dragState.value.allowDrop = true;\n  });\n  return {\n    dragState\n  };\n}\nfunction useDragNodeEmitter() {\n  const emitter = inject(\"DragNodeEmitter\");\n  return {\n    emitter\n  };\n}\n\nvar script$1 = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent: script\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({})\n    },\n    props: {\n      type: Object,\n      default: () => ({})\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup(props, ctx) {\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props);\n    const tree = inject(\"RootTree\");\n    const expanded = ref(false);\n    const childNodeRendered = ref(false);\n    const oldChecked = ref(null);\n    const oldIndeterminate = ref(null);\n    const node$ = ref(null);\n    const { emitter } = useDragNodeEmitter();\n    const instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n    if (!tree) {\n      console.warn(\"Can not find node's tree.\");\n    }\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n    const childrenKey = tree.props[\"children\"] || \"children\";\n    watch(() => {\n      const children = props.node.data[childrenKey];\n      return children && [...children];\n    }, () => {\n      props.node.updateChildren();\n    });\n    watch(() => props.node.indeterminate, (val) => {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(() => props.node.checked, (val) => {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(() => props.node.expanded, (val) => {\n      nextTick(() => expanded.value = val);\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n    const getNodeKey$1 = (node) => {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n    const handleSelectChange = (checked, indeterminate) => {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n    const handleClick = () => {\n      const store = tree.store.value;\n      store.setCurrentNode(props.node);\n      tree.ctx.emit(\"current-change\", store.currentNode ? store.currentNode.data : null, store.currentNode);\n      tree.currentNode.value = props.node;\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked }\n        });\n      }\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance);\n    };\n    const handleContextMenu = (event) => {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf)\n        return;\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand();\n        ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n      }\n    };\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(() => {\n        const store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n    const handleChildNodeExpand = (nodeData, node, instance2) => {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n    const handleDragStart = (event) => {\n      if (!tree.props.draggable)\n        return;\n      emitter.emit(\"tree-node-drag-start\", { event, treeNode: props });\n    };\n    const handleDragOver = (event) => {\n      if (!tree.props.draggable)\n        return;\n      emitter.emit(\"tree-node-drag-over\", { event, treeNode: { $el: node$.value, node: props.node } });\n      event.preventDefault();\n    };\n    const handleDrop = (event) => {\n      event.preventDefault();\n    };\n    const handleDragEnd = (event) => {\n      if (!tree.props.draggable)\n        return;\n      emitter.emit(\"tree-node-drag-end\", event);\n    };\n    return {\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      emitter,\n      getNodeKey: getNodeKey$1,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd\n    };\n  }\n});\n\nconst _hoisted_1 = {\n  key: 1,\n  class: \"el-tree-node__loading-icon el-icon-loading\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_node_content = resolveComponent(\"node-content\");\n  const _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  const _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n  return withDirectives((openBlock(), createBlock(\"div\", {\n    ref: \"node$\",\n    class: [\"el-tree-node\", {\n      \"is-expanded\": _ctx.expanded,\n      \"is-current\": _ctx.node.isCurrent,\n      \"is-hidden\": !_ctx.node.visible,\n      \"is-focusable\": !_ctx.node.disabled,\n      \"is-checked\": !_ctx.node.disabled && _ctx.node.checked\n    }],\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: _cache[3] || (_cache[3] = withModifiers((...args) => _ctx.handleClick && _ctx.handleClick(...args), [\"stop\"])),\n    onContextmenu: _cache[4] || (_cache[4] = (...args) => _ctx.handleContextMenu && _ctx.handleContextMenu(...args)),\n    onDragstart: _cache[5] || (_cache[5] = withModifiers((...args) => _ctx.handleDragStart && _ctx.handleDragStart(...args), [\"stop\"])),\n    onDragover: _cache[6] || (_cache[6] = withModifiers((...args) => _ctx.handleDragOver && _ctx.handleDragOver(...args), [\"stop\"])),\n    onDragend: _cache[7] || (_cache[7] = withModifiers((...args) => _ctx.handleDragEnd && _ctx.handleDragEnd(...args), [\"stop\"])),\n    onDrop: _cache[8] || (_cache[8] = withModifiers((...args) => _ctx.handleDrop && _ctx.handleDrop(...args), [\"stop\"]))\n  }, [\n    createVNode(\"div\", {\n      class: \"el-tree-node__content\",\n      style: { \"padding-left\": (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\" }\n    }, [\n      createVNode(\"span\", {\n        class: [\n          {\n            \"is-leaf\": _ctx.node.isLeaf,\n            expanded: !_ctx.node.isLeaf && _ctx.expanded\n          },\n          \"el-tree-node__expand-icon\",\n          _ctx.tree.props.iconClass ? _ctx.tree.props.iconClass : \"el-icon-caret-right\"\n        ],\n        onClick: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.handleExpandIconClick && _ctx.handleExpandIconClick(...args), [\"stop\"]))\n      }, null, 2),\n      _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n        key: 0,\n        \"model-value\": _ctx.node.checked,\n        indeterminate: _ctx.node.indeterminate,\n        disabled: !!_ctx.node.disabled,\n        onClick: _cache[2] || (_cache[2] = withModifiers(() => {\n        }, [\"stop\"])),\n        onChange: _ctx.handleCheckChange\n      }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true),\n      _ctx.node.loading ? (openBlock(), createBlock(\"span\", _hoisted_1)) : createCommentVNode(\"v-if\", true),\n      createVNode(_component_node_content, {\n        node: _ctx.node,\n        \"render-content\": _ctx.renderContent\n      }, null, 8, [\"node\", \"render-content\"])\n    ], 4),\n    createVNode(_component_el_collapse_transition, null, {\n      default: withCtx(() => [\n        !_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createBlock(\"div\", {\n          key: 0,\n          class: \"el-tree-node__children\",\n          role: \"group\",\n          \"aria-expanded\": _ctx.expanded\n        }, [\n          (openBlock(true), createBlock(Fragment, null, renderList(_ctx.node.childNodes, (child) => {\n            return openBlock(), createBlock(_component_el_tree_node, {\n              key: _ctx.getNodeKey(child),\n              \"render-content\": _ctx.renderContent,\n              \"render-after-expand\": _ctx.renderAfterExpand,\n              \"show-checkbox\": _ctx.showCheckbox,\n              node: child,\n              onNodeExpand: _ctx.handleChildNodeExpand\n            }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"onNodeExpand\"]);\n          }), 128))\n        ], 8, [\"aria-expanded\"])), [\n          [vShow, _ctx.expanded]\n        ]) : createCommentVNode(\"v-if\", true)\n      ]),\n      _: 1\n    })\n  ], 42, [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\"])), [\n    [vShow, _ctx.node.visible]\n  ]);\n}\n\nscript$1.render = render;\nscript$1.__file = \"packages/tree/src/tree-node.vue\";\n\nfunction useKeydown({ el$ }, store) {\n  const treeItems = ref([]);\n  const checkboxItems = ref([]);\n  onMounted(() => {\n    initTabIndex();\n    on(el$.value, \"keydown\", handleKeydown);\n  });\n  onBeforeUnmount(() => {\n    off(el$.value, \"keydown\", handleKeydown);\n  });\n  onUpdated(() => {\n    treeItems.value = Array.from(el$.value.querySelectorAll(\"[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n  });\n  watch(checkboxItems, (val) => {\n    val.forEach((checkbox) => {\n      checkbox.setAttribute(\"tabindex\", \"-1\");\n    });\n  });\n  const handleKeydown = (ev) => {\n    const currentItem = ev.target;\n    if (currentItem.className.indexOf(\"el-tree-node\") === -1)\n      return;\n    const code = ev.code;\n    treeItems.value = Array.from(el$.value.querySelectorAll(\".is-focusable[role=treeitem]\"));\n    const currentIndex = treeItems.value.indexOf(currentItem);\n    let nextIndex;\n    if ([EVENT_CODE.up, EVENT_CODE.down].indexOf(code) > -1) {\n      ev.preventDefault();\n      if (code === EVENT_CODE.up) {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex !== 0 ? currentIndex - 1 : treeItems.value.length - 1;\n        const startIndex = nextIndex;\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)\n            break;\n          nextIndex--;\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1;\n          }\n        }\n      } else {\n        nextIndex = currentIndex === -1 ? 0 : currentIndex < treeItems.value.length - 1 ? currentIndex + 1 : 0;\n        const startIndex = nextIndex;\n        while (true) {\n          if (store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus)\n            break;\n          nextIndex++;\n          if (nextIndex === startIndex) {\n            nextIndex = -1;\n            break;\n          }\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0;\n          }\n        }\n      }\n      nextIndex !== -1 && treeItems.value[nextIndex].focus();\n    }\n    if ([EVENT_CODE.left, EVENT_CODE.right].indexOf(code) > -1) {\n      ev.preventDefault();\n      currentItem.click();\n    }\n    const hasInput = currentItem.querySelector('[type=\"checkbox\"]');\n    if ([EVENT_CODE.enter, EVENT_CODE.space].indexOf(code) > -1 && hasInput) {\n      ev.preventDefault();\n      hasInput.click();\n    }\n  };\n  const initTabIndex = () => {\n    var _a;\n    treeItems.value = Array.from(el$.value.querySelectorAll(\".is-focusable[role=treeitem]\"));\n    checkboxItems.value = Array.from(el$.value.querySelectorAll(\"input[type=checkbox]\"));\n    const checkedItem = el$.value.querySelectorAll(\".is-checked[role=treeitem]\");\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute(\"tabindex\", \"0\");\n      return;\n    }\n    (_a = treeItems.value[0]) == null ? void 0 : _a.setAttribute(\"tabindex\", \"0\");\n  };\n}\n\nvar script$2 = defineComponent({\n  name: \"ElTree\",\n  components: { ElTreeNode: script$1 },\n  props: {\n    data: {\n      type: Array\n    },\n    emptyText: {\n      type: String\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true\n    },\n    defaultCheckedKeys: Array,\n    defaultExpandedKeys: Array,\n    currentNodeKey: [String, Number],\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false\n    },\n    draggable: {\n      type: Boolean,\n      default: false\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object,\n      default() {\n        return {\n          children: \"children\",\n          label: \"label\",\n          disabled: \"disabled\"\n        };\n      }\n    },\n    lazy: {\n      type: Boolean,\n      default: false\n    },\n    highlightCurrent: Boolean,\n    load: Function,\n    filterNodeMethod: Function,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18\n    },\n    iconClass: String\n  },\n  emits: [\n    \"check-change\",\n    \"current-change\",\n    \"node-click\",\n    \"node-contextmenu\",\n    \"node-collapse\",\n    \"node-expand\",\n    \"check\",\n    \"node-drag-start\",\n    \"node-drag-end\",\n    \"node-drop\",\n    \"node-drag-leave\",\n    \"node-drag-enter\",\n    \"node-drag-over\"\n  ],\n  setup(props, ctx) {\n    const { t } = useLocaleInject();\n    const store = ref(new TreeStore({\n      key: props.nodeKey,\n      data: props.data,\n      lazy: props.lazy,\n      props: props.props,\n      load: props.load,\n      currentNodeKey: props.currentNodeKey,\n      checkStrictly: props.checkStrictly,\n      checkDescendants: props.checkDescendants,\n      defaultCheckedKeys: props.defaultCheckedKeys,\n      defaultExpandedKeys: props.defaultExpandedKeys,\n      autoExpandParent: props.autoExpandParent,\n      defaultExpandAll: props.defaultExpandAll,\n      filterNodeMethod: props.filterNodeMethod\n    }));\n    store.value.initialize();\n    const root = ref(store.value.root);\n    const currentNode = ref(null);\n    const el$ = ref(null);\n    const dropIndicator$ = ref(null);\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props);\n    const { dragState } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store\n    });\n    useKeydown({ el$ }, store);\n    const isEmpty = computed(() => {\n      const { childNodes } = root.value;\n      return !childNodes || childNodes.length === 0 || childNodes.every(({ visible }) => !visible);\n    });\n    watch(() => props.defaultCheckedKeys, (newVal) => {\n      store.value.setDefaultCheckedKey(newVal);\n    });\n    watch(() => props.defaultExpandedKeys, (newVal) => {\n      store.value.defaultExpandedKeys = newVal;\n      store.value.setDefaultExpandedKeys(newVal);\n    });\n    watch(() => props.data, (newVal) => {\n      store.value.setData(newVal);\n    }, { deep: true });\n    watch(() => props.checkStrictly, (newVal) => {\n      store.value.checkStrictly = newVal;\n    });\n    const filter = (value) => {\n      if (!props.filterNodeMethod)\n        throw new Error(\"[Tree] filterNodeMethod is required when filter\");\n      store.value.filter(value);\n    };\n    const getNodeKey$1 = (node) => {\n      return getNodeKey(props.nodeKey, node.data);\n    };\n    const getNodePath = (data) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in getNodePath\");\n      const node = store.value.getNode(data);\n      if (!node)\n        return [];\n      const path = [node.data];\n      let parent = node.parent;\n      while (parent && parent !== root.value) {\n        path.push(parent.data);\n        parent = parent.parent;\n      }\n      return path.reverse();\n    };\n    const getCheckedNodes = (leafOnly, includeHalfChecked) => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked);\n    };\n    const getCheckedKeys = (leafOnly) => {\n      return store.value.getCheckedKeys(leafOnly);\n    };\n    const getCurrentNode = () => {\n      const currentNode2 = store.value.getCurrentNode();\n      return currentNode2 ? currentNode2.data : null;\n    };\n    const getCurrentKey = () => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in getCurrentKey\");\n      const currentNode2 = getCurrentNode();\n      return currentNode2 ? currentNode2[props.nodeKey] : null;\n    };\n    const setCheckedNodes = (nodes, leafOnly) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCheckedNodes\");\n      store.value.setCheckedNodes(nodes, leafOnly);\n    };\n    const setCheckedKeys = (keys, leafOnly) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCheckedKeys\");\n      store.value.setCheckedKeys(keys, leafOnly);\n    };\n    const setChecked = (data, checked, deep) => {\n      store.value.setChecked(data, checked, deep);\n    };\n    const getHalfCheckedNodes = () => {\n      return store.value.getHalfCheckedNodes();\n    };\n    const getHalfCheckedKeys = () => {\n      return store.value.getHalfCheckedKeys();\n    };\n    const setCurrentNode = (node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCurrentNode\");\n      store.value.setUserCurrentNode(node, shouldAutoExpandParent);\n    };\n    const setCurrentKey = (key, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in setCurrentKey\");\n      store.value.setCurrentNodeKey(key, shouldAutoExpandParent);\n    };\n    const getNode = (data) => {\n      return store.value.getNode(data);\n    };\n    const remove = (data) => {\n      store.value.remove(data);\n    };\n    const append = (data, parentNode) => {\n      store.value.append(data, parentNode);\n    };\n    const insertBefore = (data, refNode) => {\n      store.value.insertBefore(data, refNode);\n    };\n    const insertAfter = (data, refNode) => {\n      store.value.insertAfter(data, refNode);\n    };\n    const handleNodeExpand = (nodeData, node, instance) => {\n      broadcastExpanded(node);\n      ctx.emit(\"node-expand\", nodeData, node, instance);\n    };\n    const updateKeyChildren = (key, data) => {\n      if (!props.nodeKey)\n        throw new Error(\"[Tree] nodeKey is required in updateKeyChild\");\n      store.value.updateChildren(key, data);\n    };\n    provide(\"RootTree\", {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance()\n    });\n    return {\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n      isEmpty,\n      filter,\n      getNodeKey: getNodeKey$1,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren\n    };\n  }\n});\n\nconst _hoisted_1$1 = {\n  key: 0,\n  class: \"el-tree__empty-block\"\n};\nconst _hoisted_2 = { class: \"el-tree__empty-text\" };\nconst _hoisted_3 = {\n  ref: \"dropIndicator$\",\n  class: \"el-tree__drop-indicator\"\n};\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  return openBlock(), createBlock(\"div\", {\n    ref: \"el$\",\n    class: [\"el-tree\", {\n      \"el-tree--highlight-current\": _ctx.highlightCurrent,\n      \"is-dragging\": !!_ctx.dragState.draggingNode,\n      \"is-drop-not-allow\": !_ctx.dragState.allowDrop,\n      \"is-drop-inner\": _ctx.dragState.dropType === \"inner\"\n    }],\n    role: \"tree\"\n  }, [\n    (openBlock(true), createBlock(Fragment, null, renderList(_ctx.root.childNodes, (child) => {\n      return openBlock(), createBlock(_component_el_tree_node, {\n        key: _ctx.getNodeKey(child),\n        node: child,\n        props: _ctx.props,\n        accordion: _ctx.accordion,\n        \"render-after-expand\": _ctx.renderAfterExpand,\n        \"show-checkbox\": _ctx.showCheckbox,\n        \"render-content\": _ctx.renderContent,\n        onNodeExpand: _ctx.handleNodeExpand\n      }, null, 8, [\"node\", \"props\", \"accordion\", \"render-after-expand\", \"show-checkbox\", \"render-content\", \"onNodeExpand\"]);\n    }), 128)),\n    _ctx.isEmpty ? (openBlock(), createBlock(\"div\", _hoisted_1$1, [\n      createVNode(\"span\", _hoisted_2, toDisplayString(_ctx.emptyText || _ctx.t(\"el.tree.emptyText\")), 1)\n    ])) : createCommentVNode(\"v-if\", true),\n    withDirectives(createVNode(\"div\", _hoisted_3, null, 512), [\n      [vShow, _ctx.dragState.showDropIndicator]\n    ])\n  ], 2);\n}\n\nscript$2.render = render$1;\nscript$2.__file = \"packages/tree/src/tree.vue\";\n\nscript$2.install = (app) => {\n  app.component(script$2.name, script$2);\n};\nconst _Tree = script$2;\n\nexport default _Tree;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}