{"ast":null,"code":"import { inject, computed, defineComponent, provide, toRefs, watch, nextTick, openBlock, createBlock, renderSlot } from 'vue';\nimport { UPDATE_MODEL_EVENT } from '../utils/constants';\nimport { isValidComponentSize } from '../utils/validators';\nimport { useGlobalConfig } from '../utils/util';\nimport { elFormKey, elFormItemKey } from '../el-form';\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\n\nconst EMPTY_OBJ = process.env.NODE_ENV !== 'production' ? Object.freeze({}) : {};\nconst EMPTY_ARR = process.env.NODE_ENV !== 'production' ? Object.freeze([]) : [];\n\nconst useCheckboxGroup = () => {\n  const ELEMENT = useGlobalConfig();\n  const elForm = inject(elFormKey, {});\n  const elFormItem = inject(elFormItemKey, {});\n  const checkboxGroup = inject(\"CheckboxGroup\", {});\n  const isGroup = computed(() => checkboxGroup && (checkboxGroup == null ? void 0 : checkboxGroup.name) === \"ElCheckboxGroup\");\n  const elFormItemSize = computed(() => {\n    return elFormItem.size;\n  });\n  return {\n    isGroup,\n    checkboxGroup,\n    elForm,\n    ELEMENT,\n    elFormItemSize,\n    elFormItem\n  };\n};\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar script = defineComponent({\n  name: \"ElCheckboxGroup\",\n  props: {\n    modelValue: {\n      type: [Object, Boolean, Array],\n      default: () => void 0\n    },\n    disabled: Boolean,\n    min: {\n      type: Number,\n      default: void 0\n    },\n    max: {\n      type: Number,\n      default: void 0\n    },\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    fill: {\n      type: String,\n      default: void 0\n    },\n    textColor: {\n      type: String,\n      default: void 0\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT, \"change\"],\n\n  setup(props, ctx) {\n    const {\n      elFormItem,\n      elFormItemSize,\n      ELEMENT\n    } = useCheckboxGroup();\n    const checkboxGroupSize = computed(() => props.size || elFormItemSize.value || ELEMENT.size);\n\n    const changeEvent = value => {\n      ctx.emit(UPDATE_MODEL_EVENT, value);\n      nextTick(() => {\n        ctx.emit(\"change\", value);\n      });\n    };\n\n    const modelValue = computed({\n      get() {\n        return props.modelValue;\n      },\n\n      set(val) {\n        changeEvent(val);\n      }\n\n    });\n    provide(\"CheckboxGroup\", __spreadProps(__spreadValues({\n      name: \"ElCheckboxGroup\",\n      modelValue\n    }, toRefs(props)), {\n      checkboxGroupSize,\n      changeEvent\n    }));\n    watch(() => props.modelValue, val => {\n      var _a;\n\n      (_a = elFormItem.formItemMitt) == null ? void 0 : _a.emit(\"el.form.change\", [val]);\n    });\n  }\n\n});\nconst _hoisted_1 = {\n  class: \"el-checkbox-group\",\n  role: \"group\",\n  \"aria-label\": \"checkbox-group\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\")]);\n}\n\nscript.render = render;\nscript.__file = \"packages/checkbox/src/checkbox-group.vue\";\n\nscript.install = app => {\n  app.component(script.name, script);\n};\n\nconst _CheckboxGroup = script;\nexport default _CheckboxGroup;","map":{"version":3,"names":["inject","computed","defineComponent","provide","toRefs","watch","nextTick","openBlock","createBlock","renderSlot","UPDATE_MODEL_EVENT","isValidComponentSize","useGlobalConfig","elFormKey","elFormItemKey","EMPTY_OBJ","process","env","NODE_ENV","Object","freeze","EMPTY_ARR","useCheckboxGroup","ELEMENT","elForm","elFormItem","checkboxGroup","isGroup","name","elFormItemSize","size","__defProp","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","script","props","modelValue","type","Boolean","Array","default","disabled","min","Number","max","String","validator","fill","textColor","emits","setup","ctx","checkboxGroupSize","changeEvent","emit","get","set","val","_a","formItemMitt","_hoisted_1","class","role","render","_ctx","_cache","$props","$setup","$data","$options","$slots","__file","install","app","component","_CheckboxGroup"],"sources":["D:/project/my_blog/blog-ui/node_modules/element-plus/es/el-checkbox-group/index.js"],"sourcesContent":["import { inject, computed, defineComponent, provide, toRefs, watch, nextTick, openBlock, createBlock, renderSlot } from 'vue';\nimport { UPDATE_MODEL_EVENT } from '../utils/constants';\nimport { isValidComponentSize } from '../utils/validators';\nimport { useGlobalConfig } from '../utils/util';\nimport { elFormKey, elFormItemKey } from '../el-form';\n\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\n\nconst useCheckboxGroup = () => {\n  const ELEMENT = useGlobalConfig();\n  const elForm = inject(elFormKey, {});\n  const elFormItem = inject(elFormItemKey, {});\n  const checkboxGroup = inject(\"CheckboxGroup\", {});\n  const isGroup = computed(() => checkboxGroup && (checkboxGroup == null ? void 0 : checkboxGroup.name) === \"ElCheckboxGroup\");\n  const elFormItemSize = computed(() => {\n    return elFormItem.size;\n  });\n  return {\n    isGroup,\n    checkboxGroup,\n    elForm,\n    ELEMENT,\n    elFormItemSize,\n    elFormItem\n  };\n};\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar script = defineComponent({\n  name: \"ElCheckboxGroup\",\n  props: {\n    modelValue: {\n      type: [Object, Boolean, Array],\n      default: () => void 0\n    },\n    disabled: Boolean,\n    min: {\n      type: Number,\n      default: void 0\n    },\n    max: {\n      type: Number,\n      default: void 0\n    },\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    fill: {\n      type: String,\n      default: void 0\n    },\n    textColor: {\n      type: String,\n      default: void 0\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT, \"change\"],\n  setup(props, ctx) {\n    const { elFormItem, elFormItemSize, ELEMENT } = useCheckboxGroup();\n    const checkboxGroupSize = computed(() => props.size || elFormItemSize.value || ELEMENT.size);\n    const changeEvent = (value) => {\n      ctx.emit(UPDATE_MODEL_EVENT, value);\n      nextTick(() => {\n        ctx.emit(\"change\", value);\n      });\n    };\n    const modelValue = computed({\n      get() {\n        return props.modelValue;\n      },\n      set(val) {\n        changeEvent(val);\n      }\n    });\n    provide(\"CheckboxGroup\", __spreadProps(__spreadValues({\n      name: \"ElCheckboxGroup\",\n      modelValue\n    }, toRefs(props)), {\n      checkboxGroupSize,\n      changeEvent\n    }));\n    watch(() => props.modelValue, (val) => {\n      var _a;\n      (_a = elFormItem.formItemMitt) == null ? void 0 : _a.emit(\"el.form.change\", [val]);\n    });\n  }\n});\n\nconst _hoisted_1 = {\n  class: \"el-checkbox-group\",\n  role: \"group\",\n  \"aria-label\": \"checkbox-group\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(\"div\", _hoisted_1, [\n    renderSlot(_ctx.$slots, \"default\")\n  ]);\n}\n\nscript.render = render;\nscript.__file = \"packages/checkbox/src/checkbox-group.vue\";\n\nscript.install = (app) => {\n  app.component(script.name, script);\n};\nconst _CheckboxGroup = script;\n\nexport default _CheckboxGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}