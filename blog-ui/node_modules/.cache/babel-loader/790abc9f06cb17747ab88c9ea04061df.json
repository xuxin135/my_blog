{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { defineComponent, ref, inject, computed, getCurrentInstance, withDirectives, openBlock, createBlock, renderSlot, vShow, createCommentVNode } from 'vue';\nvar script = defineComponent({\n  name: \"ElTabPane\",\n  props: {\n    label: {\n      type: String,\n      default: \"\"\n    },\n    name: {\n      type: String,\n      default: \"\"\n    },\n    closable: Boolean,\n    disabled: Boolean,\n    lazy: Boolean\n  },\n\n  setup(props) {\n    const index = ref(null);\n    const loaded = ref(false);\n    const rootTabs = inject(\"rootTabs\");\n    const updatePaneState = inject(\"updatePaneState\");\n\n    if (!rootTabs || !updatePaneState) {\n      throw new Error(`ElTabPane must use with ElTabs`);\n    }\n\n    const isClosable = computed(() => {\n      return props.closable || rootTabs.props.closable;\n    });\n    const active = computed(() => {\n      const active2 = rootTabs.currentName.value === (props.name || index.value);\n\n      if (active2) {\n        loaded.value = true;\n      }\n\n      return active2;\n    });\n    const paneName = computed(() => {\n      return props.name || index.value;\n    });\n    const shouldBeRender = computed(() => {\n      return !props.lazy || loaded.value || active.value;\n    });\n    const instance = getCurrentInstance();\n    updatePaneState({\n      uid: instance.uid,\n      instance,\n      props,\n      paneName,\n      active,\n      index,\n      isClosable\n    });\n    return {\n      index,\n      loaded,\n      isClosable,\n      active,\n      paneName,\n      shouldBeRender\n    };\n  }\n\n});\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.shouldBeRender ? withDirectives((openBlock(), createBlock(\"div\", {\n    key: 0,\n    id: `pane-${_ctx.paneName}`,\n    class: \"el-tab-pane\",\n    role: \"tabpanel\",\n    \"aria-hidden\": !_ctx.active,\n    \"aria-labelledby\": `tab-${_ctx.paneName}`\n  }, [renderSlot(_ctx.$slots, \"default\")], 8, [\"id\", \"aria-hidden\", \"aria-labelledby\"])), [[vShow, _ctx.active]]) : createCommentVNode(\"v-if\", true);\n}\n\nscript.render = render;\nscript.__file = \"packages/tabs/src/tab-pane.vue\";\n\nscript.install = app => {\n  app.component(script.name, script);\n};\n\nconst _TabPane = script;\nexport default _TabPane;","map":{"version":3,"names":["defineComponent","ref","inject","computed","getCurrentInstance","withDirectives","openBlock","createBlock","renderSlot","vShow","createCommentVNode","script","name","props","label","type","String","default","closable","Boolean","disabled","lazy","setup","index","loaded","rootTabs","updatePaneState","Error","isClosable","active","active2","currentName","value","paneName","shouldBeRender","instance","uid","render","_ctx","_cache","$props","$setup","$data","$options","key","id","class","role","$slots","__file","install","app","component","_TabPane"],"sources":["D:/project/my_blog/blog-ui/node_modules/element-plus/es/el-tab-pane/index.js"],"sourcesContent":["import { defineComponent, ref, inject, computed, getCurrentInstance, withDirectives, openBlock, createBlock, renderSlot, vShow, createCommentVNode } from 'vue';\n\nvar script = defineComponent({\n  name: \"ElTabPane\",\n  props: {\n    label: {\n      type: String,\n      default: \"\"\n    },\n    name: {\n      type: String,\n      default: \"\"\n    },\n    closable: Boolean,\n    disabled: Boolean,\n    lazy: Boolean\n  },\n  setup(props) {\n    const index = ref(null);\n    const loaded = ref(false);\n    const rootTabs = inject(\"rootTabs\");\n    const updatePaneState = inject(\"updatePaneState\");\n    if (!rootTabs || !updatePaneState) {\n      throw new Error(`ElTabPane must use with ElTabs`);\n    }\n    const isClosable = computed(() => {\n      return props.closable || rootTabs.props.closable;\n    });\n    const active = computed(() => {\n      const active2 = rootTabs.currentName.value === (props.name || index.value);\n      if (active2) {\n        loaded.value = true;\n      }\n      return active2;\n    });\n    const paneName = computed(() => {\n      return props.name || index.value;\n    });\n    const shouldBeRender = computed(() => {\n      return !props.lazy || loaded.value || active.value;\n    });\n    const instance = getCurrentInstance();\n    updatePaneState({\n      uid: instance.uid,\n      instance,\n      props,\n      paneName,\n      active,\n      index,\n      isClosable\n    });\n    return {\n      index,\n      loaded,\n      isClosable,\n      active,\n      paneName,\n      shouldBeRender\n    };\n  }\n});\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.shouldBeRender ? withDirectives((openBlock(), createBlock(\"div\", {\n    key: 0,\n    id: `pane-${_ctx.paneName}`,\n    class: \"el-tab-pane\",\n    role: \"tabpanel\",\n    \"aria-hidden\": !_ctx.active,\n    \"aria-labelledby\": `tab-${_ctx.paneName}`\n  }, [\n    renderSlot(_ctx.$slots, \"default\")\n  ], 8, [\"id\", \"aria-hidden\", \"aria-labelledby\"])), [\n    [vShow, _ctx.active]\n  ]) : createCommentVNode(\"v-if\", true);\n}\n\nscript.render = render;\nscript.__file = \"packages/tabs/src/tab-pane.vue\";\n\nscript.install = (app) => {\n  app.component(script.name, script);\n};\nconst _TabPane = script;\n\nexport default _TabPane;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}